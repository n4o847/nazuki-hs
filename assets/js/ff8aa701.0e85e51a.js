"use strict";(self.webpackChunk_nazuki_hs_website=self.webpackChunk_nazuki_hs_website||[]).push([[106],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=a,d=m["".concat(p,".").concat(c)]||m[c]||k[c]||l;return n?i.createElement(d,r(r({ref:t},u),{},{components:n})):i.createElement(d,r({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var i=n(5773),a=(n(7378),n(5318));const l={},r="Assembly",o={unversionedId:"assembly",id:"assembly",title:"Assembly",description:"Instructions",source:"@site/docs/assembly.md",sourceDirName:".",slug:"/assembly",permalink:"/nazuki-hs/docs/assembly",draft:!1,editUrl:"https://github.com/n4o847/nazuki-hs/tree/main/website/docs/assembly.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Virtual Machine",permalink:"/nazuki-hs/docs/vm"},next:{title:"Script",permalink:"/nazuki-hs/docs/script"}},p={},s=[{value:"Instructions",id:"instructions",level:2},{value:"Int32",id:"int32",level:3},{value:"Constants",id:"constants",level:4},{value:"Stack Operations",id:"stack-operations",level:4},{value:"Bitwise Operations",id:"bitwise-operations",level:4},{value:"Arithmetic Operations",id:"arithmetic-operations",level:4},{value:"Comparison Operations",id:"comparison-operations",level:4},{value:"Input/Output Operations",id:"inputoutput-operations",level:4},{value:"Control Instructions",id:"control-instructions",level:4}],u={toc:s},m="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"assembly"},"Assembly"),(0,a.kt)("h2",{id:"instructions"},"Instructions"),(0,a.kt)("h3",{id:"int32"},"Int32"),(0,a.kt)("h4",{id:"constants"},"Constants"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"const [n:int]"),": push ",(0,a.kt)("inlineCode",{parentName:"li"},"n"))),(0,a.kt)("h4",{id:"stack-operations"},"Stack Operations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dup"),": duplicate"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"get [n:int]"),": get the ",(0,a.kt)("inlineCode",{parentName:"li"},"n"),"th element",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"if ",(0,a.kt)("inlineCode",{parentName:"li"},"n")," is non-negative, count from the bottom of the stack"),(0,a.kt)("li",{parentName:"ul"},"if ",(0,a.kt)("inlineCode",{parentName:"li"},"n")," is negative, count from the top of the stack"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set [n:int]"),": set the ",(0,a.kt)("inlineCode",{parentName:"li"},"n"),"th element",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"if n is non-negative, count from the bottom of the stack"),(0,a.kt)("li",{parentName:"ul"},"if n is negative, count from the top of the stack"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"drop"))),(0,a.kt)("h4",{id:"bitwise-operations"},"Bitwise Operations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"not"),": bitwise not"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"and"),": bitwise and"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"or"),": bitwise or"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"xor"),": bitwise xor"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"shl"),": shift left"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"shr_u"),": shift right (unsigned)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"shr_s"),": shift left (signed)")),(0,a.kt)("h4",{id:"arithmetic-operations"},"Arithmetic Operations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"add"),": add"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sub"),": subtract"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"mul10"),": multiply 10, but faster than ",(0,a.kt)("inlineCode",{parentName:"li"},"mul")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"mul"),": multiply")),(0,a.kt)("h4",{id:"comparison-operations"},"Comparison Operations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"eqz"),": equal to 0"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nez"),": not equal to 0"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"eq"),": equal to"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lt_s"),": less than (signed)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"le_s"),": less than or equal to (signed)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lt_u"),": less than (unsigned)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"le_u"),": less than or equal to (unsigned)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"gt_s"),": greater than (signed)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ge_s"),": greater than or equal to (signed)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"gt_u"),": greater than (unsigned)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ge_u"),": greater than or equal to (unsigned)")),(0,a.kt)("h4",{id:"inputoutput-operations"},"Input/Output Operations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"scan")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"print"))),(0,a.kt)("h4",{id:"control-instructions"},"Control Instructions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"jump [l:label]"),": jump to ",(0,a.kt)("inlineCode",{parentName:"li"},"l")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"jz [l:label]"),": jump if zero"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"jnz [l:label]"),": jump if not zero"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"jeq [l:label]"),": jump if equal")))}k.isMDXComponent=!0}}]);