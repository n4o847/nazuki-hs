(function(n,t){if(n.setImmediate)return;var e=1,s={},r=!1,i=n.document,o;function a(_){typeof _!="function"&&(_=new Function(""+_));for(var g=new Array(arguments.length-1),b=0;b<g.length;b++)g[b]=arguments[b+1];var v={callback:_,args:g};return s[e]=v,o(e),e++}function l(_){delete s[_]}function c(_){var g=_.callback,b=_.args;switch(b.length){case 0:g();break;case 1:g(b[0]);break;case 2:g(b[0],b[1]);break;case 3:g(b[0],b[1],b[2]);break;default:g.apply(t,b);break}}function f(_){if(r)setTimeout(f,0,_);else{var g=s[_];if(g){r=!0;try{c(g)}finally{l(_),r=!1}}}}function m(){o=function(_){process.nextTick(function(){f(_)})}}function p(){if(n.postMessage&&!n.importScripts){var _=!0,g=n.onmessage;return n.onmessage=function(){_=!1},n.postMessage("","*"),n.onmessage=g,_}}function A(){var _="setImmediate$"+Math.random()+"$",g=function(b){b.source===n&&typeof b.data=="string"&&b.data.indexOf(_)===0&&f(+b.data.slice(_.length))};n.addEventListener?n.addEventListener("message",g,!1):n.attachEvent("onmessage",g),o=function(b){n.postMessage(_+b,"*")}}function B(){var _=new MessageChannel;_.port1.onmessage=function(g){var b=g.data;f(b)},o=function(g){_.port2.postMessage(g)}}function y(){var _=i.documentElement;o=function(g){var b=i.createElement("script");b.onreadystatechange=function(){f(g),b.onreadystatechange=null,_.removeChild(b),b=null},_.appendChild(b)}}function P(){o=function(_){setTimeout(f,0,_)}}var T=Object.getPrototypeOf&&Object.getPrototypeOf(n);T=T&&T.setTimeout?T:n,{}.toString.call(n.process)==="[object process]"?m():p()?A():n.MessageChannel?B():i&&"onreadystatechange"in i.createElement("script")?y():P(),T.setImmediate=a,T.clearImmediate=l})(typeof self>"u"?typeof global>"u"?globalThis:global:self);function S(n){return Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(n))).reduce((t,[e,s])=>(e==="constructor"||s.get||(t[e]=n[e].bind(n)),t),{})}class kt{constructor(t){this.names=t,this.flags=this.names.map(()=>!1),Object.freeze(this)}enter(t){if(this.flags[t])throw new WebAssembly.RuntimeError(`ReentrancyGuard: ${this.names[t]} reentered!`);this.flags[t]=!0}exit(t){this.flags[t]=!1}}class vt{constructor(t,e){this.time=new Date,this.level=t,this.event=e,Object.freeze(this)}}class Rt{constructor(){this.events=[],this.enabled=!0,this.onEvent=()=>{},Object.seal(this)}isEnabled(){return this.enabled}setEnabled(t){this.enabled=Boolean(t)}log(t,e){if(this.enabled){const s=new vt(t,e);this.events.push(s),this.onEvent(s)}}logInfo(t){this.log("INFO",t)}logError(t){this.log("ERROR",t)}logEvent(t){this.log("EVENT",t)}}class Lt{constructor(t,e){this.logger=t,this.symbolLookupTable={};for(const[s,r]of e.allEntries())this.symbolLookupTable[r]=s;Object.freeze(this)}traceCmm(t){this.logger.logInfo(["call",t,this.symbolLookupTable[t]])}traceCmmBlock(t,e){this.logger.logInfo(["br",t,this.symbolLookupTable[t],e])}traceCmmSetLocal(t,e,s){this.logger.logInfo(["set_local",t,this.symbolLookupTable[t],e,s,this.symbolLookupTable[s]])}}const z2=2097143,M1=2097133,O=1048576,O1=20,X=4096,Nt=252,m2=0,f2=8,Mt=64,G=256,_2=16384,d2=1032192,r2=0,N=8,P1=16,Q=40,q=44,i2=46,b2=48,o2=4,Ot=65536,M=24,g2=32,Pt=16,p2=20,U1=24,C1=32,y2=32,w2=16,F1=24,S2=32,T2=16,I2=8,t2=0,z1=8,J=16,Ut=0,k=24,Ct=16,F=8,Ft=32,W1=8,I=8,z=16,j=20,W2=0,D1=8,x2=24,A2=8,V1=24,H1=8,J1=16,E2=24,B2=24,zt=8,k2=12,j1=16,G1=24,v2=0,$1=80,K1=104,Y1=888,R2=904,Z1=912,D2=24,V2=8,L2=16,e2=24,Wt=0,X1=24,N2=24,s2=16,Q1=16,M2=8,O2=16,W=16,H2=16,Dt=0,P2=24,q1=48,R=24,tt=32,et=34,st=40,rt=8,L=16,U2=24,it=8,ot=8,nt=16,at=24,ct=32,lt=40,ut=16,Vt=0,ht=8,Ht=88,Jt=48,jt=24,Gt=0,$t=8,mt=1,Kt=0,C2=["JSVal","Bool","Char","Double","Float","Int","Int8","Int16","Int32","Int64","Word","Word8","Word16","Word32","Word64","StablePtr","Ptr","FunPtr"],Yt=Object.freeze(Object.defineProperty({__proto__:null,dataTag:z2,functionTag:M1,mblock_size:O,mblock_size_log2:O1,block_size:X,blocks_per_mblock:Nt,offset_timespec_tv_sec:m2,offset_timespec_tv_nsec:f2,sizeof_bdescr:Mt,offset_first_bdescr:G,offset_first_block:_2,sizeof_first_mblock:d2,offset_bdescr_start:r2,offset_bdescr_free:N,offset_bdescr_link:P1,offset_bdescr_gen_no:Q,offset_bdescr_node:q,offset_bdescr_flags:i2,offset_bdescr_blocks:b2,BF_PINNED:o2,pageSize:Ot,offset_Capability_r:M,sizeof_StgAP:g2,offset_StgAP_arity:Pt,offset_StgAP_n_args:p2,offset_StgAP_fun:U1,offset_StgAP_payload:C1,sizeof_StgAP_STACK:y2,offset_StgAP_STACK_size:w2,offset_StgAP_STACK_fun:F1,offset_StgAP_STACK_payload:S2,sizeof_StgArrBytes:T2,offset_StgArrBytes_bytes:I2,offset_StgFunInfoExtraFwd_fun_type:t2,offset_StgFunInfoExtraFwd_srt:z1,offset_StgFunInfoExtraFwd_b:J,offset_StgFunInfoTable_i:Ut,offset_StgFunInfoTable_f:k,sizeof_StgInd:Ct,offset_StgInd_indirectee:F,sizeof_StgIndStatic:Ft,offset_StgIndStatic_indirectee:W1,offset_StgInfoTable_layout:I,offset_StgInfoTable_type:z,offset_StgInfoTable_srt:j,offset_StgLargeBitmap_size:W2,offset_StgLargeBitmap_bitmap:D1,sizeof_StgMutArrPtrs:x2,offset_StgMutArrPtrs_ptrs:A2,offset_StgMutArrPtrs_payload:V1,offset_StgMVar_head:H1,offset_StgMVar_tail:J1,offset_StgMVar_value:E2,sizeof_StgPAP:B2,offset_StgPAP_arity:zt,offset_StgPAP_n_args:k2,offset_StgPAP_fun:j1,offset_StgPAP_payload:G1,offset_StgRegTable_rR1:v2,offset_StgRegTable_rF1:$1,offset_StgRegTable_rD1:K1,offset_StgRegTable_rCurrentNursery:Y1,offset_StgRegTable_rHpAlloc:R2,offset_StgRegTable_rRet:Z1,sizeof_StgRetFun:D2,offset_StgRetFun_size:V2,offset_StgRetFun_fun:L2,offset_StgRetFun_payload:e2,offset_StgRetInfoTable_i:Wt,offset_StgRetInfoTable_srt:X1,sizeof_StgSelector:N2,offset_StgSelector_selectee:s2,sizeof_StgSmallMutArrPtrs:Q1,offset_StgSmallMutArrPtrs_ptrs:M2,offset_StgSmallMutArrPtrs_payload:O2,sizeof_StgThunk:W,offset_StgThunk_payload:H2,offset_StgThunkInfoTable_i:Dt,offset_StgThunkInfoTable_srt:P2,offset_StgTSO_id:q1,offset_StgTSO_stackobj:R,offset_StgTSO_what_next:tt,offset_StgTSO_why_blocked:et,offset_StgTSO_block_info:st,offset_StgStack_stack_size:rt,offset_StgStack_sp:L,offset_StgStack_stack:U2,offset_StgUpdateFrame_updatee:it,offset_StgWeak_cfinalizers:ot,offset_StgWeak_key:nt,offset_StgWeak_value:at,offset_StgWeak_finalizer:ct,offset_StgWeak_link:lt,sizeof_StgStableName:ut,offset_StgStableName_header:Vt,offset_StgStableName_sn:ht,offset_stat_mtime:Ht,offset_stat_size:Jt,offset_stat_mode:jt,offset_stat_dev:Gt,offset_stat_ino:$t,clock_monotonic:mt,clock_realtime:Kt,hsTyCons:C2},Symbol.toStringTag,{value:"Module"}));function Zt(n){if(!n)throw new WebAssembly.RuntimeError("Allocator returned NULL");return h.tagData(n)}class h{constructor(t){this.components=t,this.memory=void 0,this.staticMBlocks=void 0,Object.seal(this)}get i8View(){return new Uint8Array(this.memory.buffer)}get dataView(){return new DataView(this.memory.buffer)}init(t,e){this.memory=t,this.staticMBlocks=e}static unTag(t){return Number(t)&4294967295}static getTag(t){return Math.floor(Number(t)/2**32)}static tagData(t){return z2*2**32+Number(t)}static tagFunction(t){return M1*2**32+Number(t)}static unDynTag(t){const e=Number(t);return e-(e&7)}static getDynTag(t){return Number(t)&7}static setDynTag(t,e){const s=Number(t);return s-(s&7)+e}i8Load(t){return this.i8View[h.unTag(t)]}i8Store(t,e){this.i8View[h.unTag(t)]=Number(e)}i16Load(t){return this.dataView.getUint16(h.unTag(t),!0)}i16Store(t,e){this.dataView.setUint16(h.unTag(t),Number(e),!0)}i32Load(t){return this.dataView.getUint32(h.unTag(t),!0)}i32Store(t,e){this.dataView.setUint32(h.unTag(t),Number(e),!0)}i64Load(t){return this.dataView.getBigUint64(h.unTag(t),!0)}i64Store(t,e){this.dataView.setBigUint64(h.unTag(t),BigInt(e),!0)}f32Load(t){return this.dataView.getFloat32(h.unTag(t),!0)}f32Store(t,e){this.dataView.setFloat32(h.unTag(t),Number(e),!0)}f64Load(t){return this.dataView.getFloat64(h.unTag(t),!0)}f64Store(t,e){this.dataView.setFloat64(h.unTag(t),Number(e),!0)}i32LoadS8(t){return this.dataView.getInt8(h.unTag(t))}i32LoadU8(t){return this.dataView.getUint8(h.unTag(t))}i32LoadS16(t){return this.dataView.getInt16(h.unTag(t),!0)}i32LoadU16(t){return this.dataView.getUint16(h.unTag(t),!0)}i64LoadS8(t){return BigInt(this.dataView.getInt8(h.unTag(t)))}i64LoadU8(t){return BigInt(this.dataView.getUint8(h.unTag(t)))}i64LoadS16(t){return BigInt(this.dataView.getInt16(h.unTag(t),!0))}i64LoadU16(t){return BigInt(this.dataView.getUint16(h.unTag(t),!0))}heapAlloced(t){return h.unTag(t)>=this.staticMBlocks<<O1}getMBlocks(t){return Zt(this.components.exports.aligned_alloc(O,O*t))}freeMBlocks(t){this.components.exports.free(h.unTag(t))}expose(t,e,s){return new s(this.memory.buffer,h.unTag(t),e)}strlen(t){return this.components.exports.strlen(h.unTag(t))}strLoad(t){let e=h.unTag(t),s="",r=0;for(;;){let i=this.i8View[e+r];if(i==0)return s;s+=String.fromCharCode(i),r++}}memchr(t,e,s){return h.tagData(this.components.exports.memchr(h.unTag(t),e,s))}memcpy(t,e,s){return h.tagData(this.components.exports.memcpy(h.unTag(t),h.unTag(e),s))}memset(t,e,s,r=1){const i={1:Uint8Array,2:Uint16Array,4:Uint32Array,8:BigUint64Array},o=this.expose(t,s,i[r]);r===8?o.fill(BigInt(e)):o.fill(e)}memsetFloat32(t,e,s){this.expose(t,s,Float32Array).fill(e)}memsetFloat64(t,e,s){this.expose(t,s,Float64Array).fill(e)}}function Xt(n){return`0x${n.toString(16)}`}class Qt{constructor(t,e,s){this.logger=t,this.symbolLookupTable=new Map;for(const[r,i]of e.allEntries())this.symbolLookupTable.set(i,r);this.memory=s,Object.freeze(this)}trap(t,e){if(h.getTag(e)!=z2){const r=new WebAssembly.RuntimeError(`Invalid address ${Xt(e)} accessed in ${this.symbolLookupTable.get(Number(t))}`);throw this.logger.logError(r),r}}loadI8(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i8Load(r)}loadI16(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i16Load(r)}loadI32(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i32Load(r)}loadI64(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i64Load(r)}loadI32S8(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i32LoadS8(r)}loadI32U8(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i32LoadU8(r)}loadI32S16(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i32LoadS16(r)}loadI32U16(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i32LoadU16(r)}loadI64S8(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i64LoadS8(r)}loadI64U8(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i64LoadU8(r)}loadI64S16(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i64LoadS16(r)}loadI64U16(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.i64LoadU16(r)}loadF32(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.f32Load(r)}loadF64(t,e,s){const r=e+BigInt(s);return this.trap(t,r),this.memory.f64Load(r)}storeI8(t,e,s,r){const i=e+BigInt(s);this.trap(t,i),this.memory.i8Store(i,r)}storeI16(t,e,s,r){const i=e+BigInt(s);this.trap(t,i),this.memory.i16Store(i,r)}storeI32(t,e,s,r){const i=e+BigInt(s);this.trap(t,i),this.memory.i32Store(i,r)}storeI64(t,e,s,r){const i=e+BigInt(s);this.trap(t,i),this.memory.i64Store(i,r)}storeF32(t,e,s,r){const i=e+BigInt(s);this.trap(t,i),this.memory.f32Store(i,r)}storeF64(t,e,s,r){const i=e+BigInt(s);this.trap(t,i),this.memory.f64Store(i,r)}}class qt{constructor(t){this.memory=t,this.currentPools=[void 0,void 0],this.generations=new Array(2),this.mgroups=new Set,Object.freeze(this)}init(){this.setGenerationNo(0),this.currentPools[1]=this.allocMegaGroup(1,!0)}setGenerationNo(t,e=!0){let s=this.generations[t];(e||!s)&&(s=this.allocMegaGroup(1,!1,t),this.generations[t]=s),this.currentPools[0]=s}hpAlloc(t,e=!1,s=0){const r=t<=d2?1:1+Math.ceil((t-d2)/O);return this.allocMegaGroup(r,e,s)}allocate(t,e=!1){const s=t<<3;e=e||s>=X;let r=this.currentPools[Number(e)],i=Number(this.memory.i64Load(r+r2)),o=Number(this.memory.i64Load(r+N));const a=this.memory.i32Load(r+b2),l=i+X*a,c=o+s;if(c<=l)this.memory.i64Store(r+N,c);else{if(e)r=this.hpAlloc(s,!0),this.currentPools[1]=r;else{const f=this.memory.i16Load(r+Q);r=this.hpAlloc(s,!1,f),this.currentPools[0]=r,this.generations[f]=r}o=Number(this.memory.i64Load(r+N)),this.memory.i64Store(r+N,o+s)}return o}allocatePinned(t){return this.allocate(t,!0)}allocMegaGroup(t,e=!1,s=0){const r=(O*t-_2)/X,i=this.memory.getMBlocks(t),o=i+G,a=i+_2;return this.memory.i64Store(o+r2,a),this.memory.i64Store(o+N,a),this.memory.i64Store(o+P1,0),this.memory.i16Store(o+q,t),this.memory.i32Store(o+b2,r),this.memory.i16Store(o+i2,e?o2:0),this.memory.i16Store(o+Q,s),this.mgroups.add(o),o}handleLiveness(t,e,s=!0){for(const r of t)if(!this.mgroups.has(r))throw new WebAssembly.RuntimeError(`Invalid live mblock 0x${r.toString(16)}`);for(const r of e){if(!this.mgroups.has(r))throw new WebAssembly.RuntimeError(`Invalid dead mblock 0x${r.toString(16)}`);this.mgroups.delete(r);const i=r-G;this.memory.freeMBlocks(i)}for(const r of Array.from(this.mgroups))if(!t.has(r)){const i=this.memory.i16Load(r+Q),o=Boolean(this.memory.i16Load(r+i2)&o2);if(s||!o&&i==0){this.mgroups.delete(r);const a=r-G,l=this.memory.i16Load(r+q);this.memory.freeMBlocks(a,l)}}this.mgroups.has(this.currentPools[1])||(this.currentPools[1]=this.allocMegaGroup(1,!0));for(let r=0;r<this.generations.length;r++)this.mgroups.has(this.generations[r])||(this.generations[r]=void 0)}liveSize(){let t=0;for(const e of this.mgroups)t+=this.memory.i16Load(e+q);return t}}class te{constructor(){this.spt=new Map,this.lasts=[0,0],Object.freeze(this)}newWithTag(t,e){const s=++this.lasts[e]<<1|e;return this.spt.set(s,t),s}newStablePtr(t){return this.newWithTag(t,0)}deRefStablePtr(t){return this.spt.get(t)}freeStablePtr(t){this.spt.delete(t)}newJSVal(t){return this.newWithTag(t,1)}getJSVal(t){return this.deRefStablePtr(t)}freeJSVal(t){this.freeStablePtr(t)}hasStablePtr(t){return this.spt.has(t)}preserveJSVals(t){for(const e of Array.from(this.spt.keys()))e&1&&!t.has(e)&&this.freeJSVal(e)}}class ee{constructor(t,e,s){this.memory=t,this.heapalloc=e,this.ptr2stable=new Map,this.SymbolTable=s,Object.seal(this)}makeStableName(t){const e=this.ptr2stable.get(t);if(e!==void 0)return e;const s=this.ptr2stable.size;let r=this.heapalloc.allocatePinned(ut);return this.memory.i64Store(r,this.SymbolTable.addressOf("stg_STABLE_NAME_info")),this.memory.i64Store(r+ht,s),this.ptr2stable.set(t,r),r}}const se=(BigInt(1)<<BigInt(64))-BigInt(1);class re{constructor(t,e,s){this.memory=t,this.stablePtrManager=e,this.sptEntries=s,Object.freeze(this);for(const[,r]of this.sptEntries)this.stablePtrManager.newStablePtr(r)}hs_spt_lookup(t,e,s,r){const i=this.sptEntries.get(BigInt(r)<<BigInt(96)|BigInt(s)<<BigInt(64)|BigInt(e)<<BigInt(32)|BigInt(t));return i||0}hs_spt_key_count(){return this.sptEntries.size}hs_spt_keys(t,e){if(e!==this.hs_spt_key_count())throw new WebAssembly.RuntimeError(`hs_spt_keys required ${e} keys, but there are ${this.hs_spt_key_count()}`);for(const[s]of this.sptEntries)this.memory.i64Store(t,s&se),this.memory.i64Store(t+8,s>>BigInt(64)),t+=16;return e}}class ie{constructor(t,e,s){this.memory=t,this.symbolTable=e,this.lastTid=0,this.tsos=new Map,this.exports=void 0,this.stablePtrManager=s,this.gc=void 0,this.blockingPromise=void 0,Object.seal(this)}setGC(t){this.gc=t}newTSO(){const t=++this.lastTid;let e,s;const r=new Promise((i,o)=>{e=i,s=o});return this.tsos.set(t,Object.seal({addr:-1,ret:0,retError:void 0,rstat:-1,ffiRet:void 0,ffiRetType:void 0,ffiRetErr:void 0,returnPromise:r,promise_resolve:e,promise_reject:s})),t}getTSOaddr(t){return this.tsos.get(t).addr}getTSOret(t){return this.tsos.get(t).ret}getTSOrstat(t){return this.tsos.get(t).rstat}setTSOaddr(t,e){this.tsos.get(t).addr=e}setTSOret(t,e){this.tsos.get(t).ret=e}setTSOrstat(t,e){this.tsos.get(t).rstat=e}getTSOid(t){return this.memory.i32Load(t+q1)}returnFFIPromise(t){this.blockingPromise=t}returnedFromTSO(t){const e=this.tsos.get(t),s=e.addr,r=Number(this.memory.i64Load(this.symbolTable.addressOf("MainCapability")+M+Z1));switch(r){case 1:{this.gc.performGC(),setImmediate(()=>this.tick(t));break}case 2:{const i=Number(this.memory.i64Load(s+R)),o=this.exports.growStack(i);this.memory.i64Store(s+R,o),setImmediate(()=>this.tick(t));break}case 3:{setImmediate(()=>this.tick(t));break}case 4:{const i=Number(this.memory.i16Load(s+et));switch(i){case U.OnCCall:case U.OnCCall_Interruptible:{const o=this.blockingPromise;this.blockingPromise=void 0,o.then(a=>{const[l,c]=a;e.ffiRet=c,e.ffiRetType=l,setImmediate(()=>this.tick(t))},a=>{e.ffiRetErr=a,setImmediate(()=>this.tick(t))});break}case U.OnDelay:{const o=Number(this.memory.i64Load(s+st));new Promise((l,c)=>{setTimeout(()=>l(),o/1e3)}).then(()=>{setImmediate(()=>this.tick(t))},l=>{throw new WebAssembly.RuntimeError(`Scheduler: blocking TSO Promise rejected with ${l}`)});break}case U.OnBlackHole:case U.OnMVar:case U.OnMVarRead:break;default:throw new WebAssembly.RuntimeError(`Unhandled thread blocking reason: ${i}`)}break}case 5:{switch(Number(this.memory.i16Load(s+tt))){case 1:{setImmediate(()=>this.tick(t));break}case 3:{e.ret=0,e.rstat=2,e.promise_reject(e.retError);break}case 4:{const o=Number(this.memory.i64Load(s+R)),a=Number(this.memory.i64Load(o+L));e.ret=Number(this.memory.i64Load(a+8)),e.rstat=1,e.promise_resolve(t);break}}break}default:throw new WebAssembly.RuntimeError(`returnFFIPromise: unsupported thread stopping reason ${r}`)}}tick(t){this.exports.context.reentrancyGuard.enter(0);try{const e=this.tsos.get(t),s=e.addr;if(e.ffiRetErr){const i=Number(this.memory.i64Load(s+R)),o=Number(this.memory.i64Load(i+L))-16,a=this.exports.rts_apply(this.symbolTable.addressOf("base_AsteriusziTypesziJSException_mkJSException_closure"),this.exports.rts_mkJSVal(this.stablePtrManager.newJSVal(e.ffiRetErr)));this.memory.i64Store(i+L,o),this.memory.i64Store(o,this.symbolTable.addressOf("stg_raise_ret_info")),this.memory.i64Store(o+8,a)}else if(typeof e.ffiRetType=="number")switch(e.ffiRetType){case 0:break;case 1:{const i=this.stablePtrManager.newJSVal(e.ffiRet);this.memory.i64Store(this.symbolTable.addressOf("MainCapability")+M+v2,i);break}case 2:{this.memory.i64Store(this.symbolTable.addressOf("MainCapability")+M+v2,e.ffiRet);break}case 3:{this.memory.f32Store(this.symbolTable.addressOf("MainCapability")+M+$1,e.ffiRet);break}case 4:{this.memory.f64Store(this.symbolTable.addressOf("MainCapability")+M+K1,e.ffiRet);break}default:throw new WebAssembly.RuntimeError(`Unsupported FFI return value type tag ${e.ffiRetType} (more than one value?): ${e.ffiRet}`)}e.ffiRet=void 0,e.ffiRetType=void 0,e.ffiRetErr=void 0;let r=!1;try{this.exports.scheduleTSO(s)}catch(i){r=!0,this.exports.stg_returnToSchedNotPaused(),e.ffiRetErr=i,setImmediate(()=>this.tick(t))}r||this.returnedFromTSO(t)}finally{this.exports.context.reentrancyGuard.exit(0)}}tsoReportException(t,e){const s=this.stablePtrManager.getJSVal(e);this.stablePtrManager.freeJSVal(e);const r=this.getTSOid(t);this.tsos.get(r).retError=s}enqueueTSO(t){const e=this.getTSOid(t),s=this.tsos.get(e);s.addr==-1&&(s.addr=Number(t)),setImmediate(()=>this.tick(e))}submitCmdCreateThread(t,e){const s=this.exports[t](e),r=this.getTSOid(s),i=this.tsos.get(r);return this.enqueueTSO(s),i.returnPromise}}const U={NotBlocked:0,OnMVar:1,OnMVarRead:14,OnBlackHole:2,OnRead:3,OnWrite:4,OnDelay:5,OnSTM:6,OnDoProc:7,OnCCall:10,OnCCall_Interruptible:11,OnMsgThrowTo:12,ThreadMigrating:13};class oe{constructor(){this.view=new DataView(new ArrayBuffer(8)),Object.freeze(this)}mul2(t,e,s,r,i){this.view.setInt32(0,e,!0),this.view.setInt32(4,t,!0);const o=this.view.getBigUint64(0,!0);this.view.setInt32(0,r,!0),this.view.setInt32(4,s,!0);const a=this.view.getBigUint64(0,!0),l=o*a,c=Number(l>>BigInt(32*i)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(c)}quotrem2_quotient(t,e,s,r,i,o,a){this.view.setInt32(0,e,!0),this.view.setInt32(4,t,!0);const l=this.view.getBigUint64(0,!0);this.view.setInt32(0,r,!0),this.view.setInt32(4,s,!0);const c=this.view.getBigUint64(0,!0),f=l<<BigInt(64)|c;this.view.setInt32(0,o,!0),this.view.setInt32(4,i,!0);const m=this.view.getBigUint64(0,!0),p=f/m,A=Number(p>>BigInt(32*a)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(A)}quotrem2_remainder(t,e,s,r,i,o,a){this.view.setInt32(0,e,!0),this.view.setInt32(4,t,!0);const l=this.view.getBigUint64(0,!0);this.view.setInt32(0,r,!0),this.view.setInt32(4,s,!0);const c=this.view.getBigUint64(0,!0),f=l<<BigInt(64)|c;this.view.setInt32(0,o,!0),this.view.setInt32(4,i,!0);const m=this.view.getBigUint64(0,!0),p=f%m,A=Number(p>>BigInt(32*a)&(BigInt(1)<<BigInt(32))-BigInt(1));return Number(A)}}class ne{constructor(t,e){this.memory=t,this.resolution=e.Time.resolution,this.getCPUTime=e.Time.getCPUTime,this.getUnixEpochTime=e.Time.getUnixEpochTime,Object.freeze(this)}getMonotonicNSec(){const t=this.getCPUTime();return t[0]*1e9+t[1]}clock_getres(t,e){if(e){let s=0,r=this.resolution;r>1e9&&(s=Math.floor(this.resolution/1e9),r=0),this.memory.i64Store(e+m2,s),this.memory.i64Store(e+f2,r)}return 0}clock_gettime(t,e){if(e){const s=t==mt?this.getCPUTime():this.getUnixEpochTime();this.memory.i64Store(e+m2,s[0]),this.memory.i64Store(e+f2,s[1])}return 0}}const a2=1,c2=2,$2=3,l2=4,u2=5,K2=6,h2=7,Y2=8,Z2=9,X2=10,Q2=11,q2=12,t1=13,ae=14,e1=15,s1=16,r1=17,i1=18,o1=19,n1=20,ce=21,$=22,a1=24,c1=25,l1=26,C=27,le=28,ft=30,_t=31,dt=32,bt=33,gt=34,ue=35,pt=36,u1=38,h1=39,m1=40,f1=42,_1=43,d1=44,b1=45,g1=46,p1=47,y1=48,w1=49,S1=50,T1=51,he=52,me=53,fe=55,_e=56,de=57,I1=59,x1=60,A1=61,E1=62,be=63,B1=0,k1=1,v1=2,R1=[0,0,0,0,65,1,65,65,65,194,964,16328,194,66,130,2,451,195,323,67,387,131,259,3,4,5,6,7,8];function K(n){const t=Number(n);return t-(t&O-1)+G}class ge{constructor(t,e,s,r,i,o,a,l,c,f){this.memory=t,this.heapAlloc=e,this.stablePtrManager=s,this.stableNameManager=r,this.scheduler=i,this.infoTables=o,this.symbolTable=a,this.reentrancyGuard=l,this.yolo=c,this.gcThreshold=f,this.nonMovedObjects=new Set,this.nonMovedObjectsToScavenge=[],this.liveMBlocks=new Set,this.blocksToScavenge=[],this.deadMBlocks=new Set,this.liveJSVals=new Set,Object.freeze(this)}isPinned(t){const e=K(t),s=this.memory.i16Load(e+i2);return Boolean(s&o2)}copyClosure(t,e){const s=this.heapAlloc.allocate(Math.ceil(e/8));this.memory.memcpy(s,t,e);const r=K(s);return this.liveMBlocks.has(r)||(this.blocksToScavenge.push(r),this.liveMBlocks.add(r)),this.deadMBlocks.add(K(t)),s}stingyEval(t,e,s,r){switch(e||(e=h.unDynTag(t),s=Number(this.memory.i64Load(e)),s%2==0&&(r=this.memory.i32Load(s+z))),r){case C:{this.memory.i64Store(e,this.symbolTable.addressOf("stg_WHITEHOLE_info"));const[i,o]=this.stingyEval(Number(this.memory.i64Load(e+F)));return this.memory.i64Store(e,this.symbolTable.addressOf("stg_IND_info")),this.memory.i64Store(e+F,i),[i,C]}case $:{this.memory.i64Store(e,this.symbolTable.addressOf("stg_WHITEHOLE_info"));const[i,o]=this.stingyEval(Number(this.memory.i64Load(e+s2)));switch(o){case a2:case l2:case h2:{const a=this.memory.i32Load(s+I),l=this.memory.i64Load(h.unDynTag(i)+(1+a<<3));return this.memory.i64Store(e+F,l),this.stingyEval(t,e,s,C)}case c2:case u2:{const a=this.memory.i64Load(h.unDynTag(i)+8);return this.memory.i64Store(e+F,a),this.stingyEval(t,e,s,C)}default:return this.memory.i64Store(e,s),this.memory.i64Store(e+s2,i),[t,r]}}default:return[t,r]}}evacuateClosure(t){if(!h.getTag(t)){if(!(Number(t)&1))throw new WebAssembly.RuntimeError(`Illegal JSVal 0x${t.toString(16)}`);return this.liveJSVals.add(Number(t)),t}const e=h.getDynTag(t),s=h.unDynTag(t);let r=Number(this.memory.i64Load(s));if(r%2)return h.setDynTag(r,e);if(this.nonMovedObjects.has(s))return t;if(this.memory.heapAlloced(s)){if(this.isPinned(s))return this.nonMovedObjects.add(s),this.nonMovedObjectsToScavenge.push(s),this.liveMBlocks.add(K(s)),t}else return this.nonMovedObjects.add(s),this.nonMovedObjectsToScavenge.push(s),t;if(this.infoTables&&!this.infoTables.has(r))throw new WebAssembly.RuntimeError(`Invalid info table 0x${r.toString(16)}`);let i,o=this.memory.i32Load(r+z);switch((o==$||o==C)&&(o=this.stingyEval(Number(t),s,r,o)[1]),o){case $2:case X2:case Z2:case c2:{i=this.copyClosure(s,16);break}case s1:case r1:{i=this.copyClosure(s,W+8);break}case o1:case i1:case n1:{i=this.copyClosure(s,W+16);break}case q2:case Q2:case t1:case u2:case l2:case K2:{i=this.copyClosure(s,24);break}case e1:{const a=this.memory.i32Load(r+I),l=this.memory.i32Load(r+I+4);i=this.copyClosure(s,W+(a+l<<3));break}case Y2:case a2:case h2:case h1:case m1:case p1:case y1:case w1:case S1:case T1:case u1:{const a=this.memory.i32Load(r+I),l=this.memory.i32Load(r+I+4);i=this.copyClosure(s,1+a+l<<3);break}case $:{i=this.copyClosure(s,N2);break}case C:return i=this.evacuateClosure(this.memory.i64Load(s+F)),this.memory.i64Store(s,h.setDynTag(i,1)),i;case c1:{const a=this.memory.i32Load(s+k2);i=this.copyClosure(s,B2+(a<<3));break}case a1:{const a=this.memory.i32Load(s+p2);i=this.copyClosure(s,g2+(a<<3));break}case l1:{const a=Number(this.memory.i64Load(s+w2));i=this.copyClosure(s,y2+(a<<3));break}case f1:{i=this.copyClosure(s,Math.ceil((T2+Number(this.memory.i64Load(s+I2)))/8)*8);break}case _1:case d1:case b1:case g1:{i=this.copyClosure(s,x2+(Number(this.memory.i64Load(s+A2))<<3));break}case I1:case x1:case A1:case E1:{i=this.copyClosure(s,Q1+(Number(this.memory.i64Load(s+M2))<<3));break}default:throw new WebAssembly.RuntimeError}return this.memory.i64Store(s,i+1),h.setDynTag(i,e)}scavengeClosureAt(t){this.memory.i64Store(t,this.evacuateClosure(this.memory.i64Load(t)))}scavengePointersFirst(t,e){for(let s=0;s<e;++s)this.scavengeClosureAt(t+(s<<3))}scavengeSmallBitmap(t,e,s){for(let r=0;r<s;++r)Number(e>>BigInt(r))&1||this.scavengeClosureAt(t+(r<<3))}scavengeLargeBitmap(t,e,s){for(let r=0;r<s;r+=64){const i=this.memory.i64Load(e+D1+(r>>3));for(let o=r;o-r<64&&o<s;++o)Number(i>>BigInt(o-r))&1||this.scavengeClosureAt(t+(o<<3))}}scavengePAP(t,e,s,r){this.scavengeClosureAt(t+e);const i=this.memory.i64Load(t+e),o=Number(this.memory.i64Load(h.unDynTag(i)));if(this.infoTables&&!this.infoTables.has(o))throw new WebAssembly.RuntimeError(`Invalid info table 0x${o.toString(16)}`);switch(this.memory.i32Load(o+k+t2)){case B1:{this.scavengeSmallBitmap(s,this.memory.i64Load(o+k+J)>>BigInt(6),r);break}case k1:{this.scavengeLargeBitmap(s,Number(this.memory.i64Load(o+k+J)),r);break}case v1:throw new WebAssembly.RuntimeError;default:{this.scavengeSmallBitmap(s,BigInt(R1[this.memory.i32Load(o+k+t2)])>>BigInt(6),r);break}}}scavengeStackChunk(t,e){let s=t;for(;;){if(s>e)throw new WebAssembly.RuntimeError;if(s==e)break;const r=Number(this.memory.i64Load(s)),i=this.memory.i32Load(r+z),o=this.memory.i64Load(r+I);if(this.infoTables&&!this.infoTables.has(r))throw new WebAssembly.RuntimeError(`Invalid info table 0x${r.toString(16)}`);switch(this.memory.i32Load(r+j)&&this.evacuateClosure(this.memory.i64Load(r+X1)),i){case ft:case bt:case gt:case ue:case pt:case fe:case _e:case de:{const a=Number(o)&63,l=o>>BigInt(6);this.scavengeSmallBitmap(s+8,l,a),s+=1+a<<3;break}case _t:{const a=Number(this.memory.i64Load(Number(o)+W2));this.scavengeLargeBitmap(s+8,Number(o),a),s+=1+a<<3;break}case dt:{const a=s,l=Number(this.memory.i64Load(a+V2));this.scavengeClosureAt(a+L2);const f=Number(this.memory.i64Load(a+L2))+0,m=Number(this.memory.i64Load(h.unDynTag(f))),p=this.memory.i32Load(m+k+t2),A=a+e2;switch(p){case B1:{this.scavengeSmallBitmap(s+e2,this.memory.i64Load(m+k+J)>>BigInt(6),l);break}case k1:{this.scavengeLargeBitmap(s+e2,Number(this.memory.i64Load(m+k+J)),l);break}case v1:throw new WebAssembly.RuntimeError;default:{const P=R1[p],T=BigInt(P)>>BigInt(6),_=P&63;this.scavengeSmallBitmap(A,T,_);break}}s+=D2+(l<<3);break}default:throw new WebAssembly.RuntimeError}}}scavengeLoop(){const t=this.nonMovedObjectsToScavenge,e=this.blocksToScavenge;let s,r;for(;;){for(s||(s=e.pop(),s&&(r=Number(this.memory.i64Load(s+r2))));s;){const i=Number(this.memory.i64Load(s+N));if(r>=i)break;r+=this.scavengeClosure(r)}if(e.length>0){s=r=void 0;continue}else if(t.length==0)return;for(;t.length>0;)this.scavengeClosure(t.pop())}}scavengeClosure(t){const e=Number(this.memory.i64Load(t)),s=this.memory.i32Load(e+z);if(this.infoTables&&!this.infoTables.has(e))throw new WebAssembly.RuntimeError(`Invalid info table 0x${e.toString(16)}`);switch(s){case c2:return this.scavengePointersFirst(t+8,1),16;case $2:return 16;case u2:return this.scavengePointersFirst(t+8,1),24;case l2:return this.scavengePointersFirst(t+8,2),24;case K2:return 24;case Y2:case Z2:case X2:case Q2:case q2:case t1:case ae:{this.memory.i32Load(e+j)&&this.evacuateClosure(this.memory.i64Load(e+k+z1));const r=this.memory.i32Load(e+I),i=this.memory.i32Load(e+I+4);return this.scavengePointersFirst(t+8,r),1+r+i<<3}case a2:case h2:case u1:case p1:case y1:case S1:case T1:case be:{const r=this.memory.i32Load(e+I),i=this.memory.i32Load(e+I+4);return this.scavengePointersFirst(t+8,r),1+r+i<<3}case ce:case e1:case s1:case r1:case i1:case o1:case n1:{this.memory.i32Load(e+j)&&this.evacuateClosure(this.memory.i64Load(e+P2));const r=this.memory.i32Load(e+I),i=this.memory.i32Load(e+I+4);return this.scavengePointersFirst(t+H2,r),W+(r+i<<3)}case $:return this.memory.i32Load(e+j)&&this.evacuateClosure(this.memory.i64Load(e+P2)),this.scavengeClosureAt(t+s2),N2;case a1:{const r=this.memory.i32Load(t+p2);return this.scavengePAP(t,U1,t+C1,r),g2+(r<<3)}case c1:{const r=this.memory.i32Load(t+k2);return this.scavengePAP(t,j1,t+G1,r),B2+(r<<3)}case l1:{const r=Number(this.memory.i64Load(t+w2));return this.scavengeClosureAt(t+F1),this.scavengeStackChunk(t+S2,t+S2+r),y2+(r<<3)}case le:{this.scavengeClosureAt(t+W1);return}case h1:case m1:return this.scavengeClosureAt(t+H1),this.scavengeClosureAt(t+J1),this.scavengeClosureAt(t+E2),E2+8;case f1:return Math.ceil((T2+Number(this.memory.i64Load(t+I2)))/8)*8;case _1:case d1:case b1:case g1:{const r=Number(this.memory.i64Load(t+A2));return this.scavengePointersFirst(t+V1,r),x2+(r<<3)}case w1:return this.scavengeClosureAt(t+ot),this.scavengeClosureAt(t+nt),this.scavengeClosureAt(t+at),this.scavengeClosureAt(t+ct),lt+8;case he:{this.scavengeClosureAt(t+R);return}case me:{const r=this.memory.i32Load(t+rt)<<3,i=Number(this.memory.i64Load(t+L)),o=t+U2+r;return this.scavengeStackChunk(i,o),U2+r}case I1:case x1:case A1:case E1:{const r=Number(this.memory.i64Load(t+M2));return this.scavengePointersFirst(t+O2,r),O2+(r<<3)}default:throw new WebAssembly.RuntimeError}}updateNursery(){const t=this.symbolTable.addressOf("MainCapability")+M,e=Number(this.memory.i64Load(t+R2));this.memory.i64Store(t+R2,0),this.memory.i64Store(t+Y1,this.heapAlloc.hpAlloc(e))}performGC(){if(this.yolo||this.heapAlloc.liveSize()<this.gcThreshold){this.updateNursery();return}this.reentrancyGuard.enter(1),this.heapAlloc.setGenerationNo(1);for(const[e,s]of this.scheduler.tsos)s.addr=this.evacuateClosure(s.addr);for(const[e,s]of this.stablePtrManager.spt.entries())e&1||this.stablePtrManager.spt.set(e,this.evacuateClosure(s));let t=new Map;for(const[e,s]of this.stableNameManager.ptr2stable.entries()){const r=this.evacuateClosure(e),i=this.evacuateClosure(s);t.set(r,i)}this.stableNameManager.ptr2stable=t,this.scavengeLoop();for(const[e,s]of this.scheduler.tsos)if(s.ret){const r=s.addr,i=Number(this.memory.i64Load(r+R)),o=Number(this.memory.i64Load(i+L));s.ret=Number(this.memory.i64Load(o+8))}this.heapAlloc.handleLiveness(this.liveMBlocks,this.deadMBlocks),this.heapAlloc.setGenerationNo(0),this.updateNursery(),this.stablePtrManager.preserveJSVals(this.liveJSVals),this.nonMovedObjects.clear(),this.liveMBlocks.clear(),this.deadMBlocks.clear(),this.liveJSVals.clear(),this.reentrancyGuard.exit(1)}}class pe{constructor(t,e,s,r,i){this.memory=t,this.heapAlloc=e,this.exports=s,this.infoTables=r,this.symbolTable=i,this.decoder=new TextDecoder("utf-8",{fatal:!0}),this.errorBuffer="",Object.seal(this)}raiseExceptionHelper(t,e,s){const r=this.heapAlloc.allocate(Math.ceil(W/8)+1);this.memory.i64Store(r,this.symbolTable.addressOf("stg_raise_info")),this.memory.i64Store(r+H2,s);const i=Number(this.memory.i64Load(e+R));let o=Number(this.memory.i64Load(i+L));for(;;){const a=Number(this.memory.i64Load(o)),l=this.memory.i32Load(a+z),c=this.memory.i64Load(a+I);if(this.infoTables&&!this.infoTables.has(a))throw new WebAssembly.RuntimeError(`Invalid info table 0x${a.toString(16)}`);switch(l){case bt:{const f=Number(this.memory.i64Load(o+it));this.exports.updateThunk(this.symbolTable.addressOf("MainCapability"),e,f,r);const m=Number(c&BigInt(63));o+=1+m<<3;break}case gt:case pt:return this.memory.i64Store(i+L,o),l;case ft:{const f=Number(c&BigInt(63));o+=1+f<<3;break}case _t:{const f=Number(this.memory.i64Load(Number(c)+W2));o+=1+f<<3;break}case dt:{const f=Number(this.memory.i64Load(o+V2));o+=D2+(f<<3);break}default:throw new WebAssembly.RuntimeError(`raiseExceptionHelper: unsupported stack frame ${l} at 0x${o.toString(16)}`)}}}barf(t){if(t){const e=this.memory.i8View.subarray(h.unTag(t)),s=e.indexOf(0),r=e.subarray(0,s),i=this.decoder.decode(r);throw new WebAssembly.RuntimeError(`barf: ${i}`)}else throw new WebAssembly.RuntimeError("barf")}barf_push(t){this.errorBuffer+=String.fromCodePoint(t)}barf_signal(t){const e=this.errorBuffer;if(this.errorBuffer="",t)throw new WebAssembly.RuntimeError(`barf_signal: ${e}`);console.error(`[DEBUG] ${e}`)}}class ye{constructor(t,e){this.memory=t,this.fs=e,this.encoder=new TextEncoder,Object.freeze(this)}debugBelch2(t,e){const s=`${this.memory.strLoad(e)}
`;this.fs.writeNonMemory(2,this.encoder.encode(s))}}class we{constructor(t){this.memory=t,this.FLT_MIN_EXP=-125,this.FLT_MANT_DIG=24,this.DBL_MIN_EXP=-1021,this.DBL_MANT_DIG=53,this.MY_DMINEXP=this.DBL_MIN_EXP-this.DBL_MANT_DIG-1,this.DHIGHBIT=1048576,this.DMSBIT=2147483648,this.MY_FMINEXP=this.FLT_MIN_EXP-this.FLT_MANT_DIG-1,this.FHIGHBIT=8388608,this.FMSBIT=2147483648,this.FLT_HIDDEN=8388608,this.FLT_POWER2=16777216,this.DBL_HIDDEN=1048576,this.DBL_POWER2=2097152,this.LTOP_BIT=2147483648,this.buffer=new ArrayBuffer(8),this.view=new DataView(this.buffer),Object.seal(this)}isFloatNegativeZero(t){return Object.is(-0,t)}isFloatNaN(t){return t!=t}isDoubleNaN(t){return t!=t}isFloatFinite(t){return isFinite(t)}isDoubleFinite(t){return isFinite(t)}isFloatInfinite(t){return!isFinite(t)&&!this.isFloatNaN(t)}isDoubleInfinite(t){return!isFinite(t)&&!this.isDoubleNaN(t)}floatMantissaFromBits(t){return t&8388607}floatExponentFromBits(t){const s=this.floatSignFromBits(t);return(t^s<<31)>>>23&255}floatSignFromBits(t){return t>>>31}doubleMantissaFromBits(t){const e=(BigInt(1)<<BigInt(52))-BigInt(1);return t&e}doubleExponentFromBits(t){const e=BigInt(2047),s=this.doubleSignFromBits(t);return(t^s<<BigInt(63))>>BigInt(52)&e}doubleSignFromBits(t){return t>>BigInt(63)}isDoubleDenormalized(t){const e=this.DoubleToIEEE(t),s=this.doubleExponentFromBits(e),r=this.doubleMantissaFromBits(e);return s===BigInt(0)&&r!==BigInt(0)}isFloatDenormalized(t){const e=this.FloatToIEEE(t),s=this.floatExponentFromBits(e),r=this.floatMantissaFromBits(e);return s===0&&r!==0}isDoubleNegativeZero(t){return Object.is(-0,t)}FloatToIEEE(t){return this.view.setFloat32(0,t),this.view.getUint32(0)}DoubleToIEEE(t){return this.view.setFloat64(0,t),this.view.getBigUint64(0)}DoubleTo2Int(t){this.view.setFloat64(0,t);const e=this.view.getUint32(0),s=this.view.getUint32(4);return[e,s]}IEEEToFloat(t){return this.view.setInt32(0,t),this.view.getFloat32(0)}IEEEToDouble(t){return this.view.setBigInt64(0,t),this.view.getFloat64(0)}__decodeFloat_Int(t,e,s){let r,i,o,a=this.FloatToIEEE(s);if(!(a&~this.FMSBIT))r=0,i=0;else{if(i=(a>>>23&255)+this.MY_FMINEXP,this.view.setUint32(0,a),o=this.view.getInt32(0),a&=this.FHIGHBIT-1,i!=this.MY_FMINEXP)a|=this.FHIGHBIT;else for(i+=1;!(a&this.FHIGHBIT);)a<<=1,i-=1;r=a,o<0&&(r=-r)}this.memory.i64Store(t,r),this.memory.i64Store(e,i)}__decodeDouble_2IntJS(t){let e,s,r,i,o;const a=this.DoubleTo2Int(t);let l=a[1],c=a[0],f=0;if(l==0&&!(c&~this.DMSBIT))r=0,i=0,o=0,s=0;else{if(s=(c>>>20&2047)+this.MY_DMINEXP,this.view.setUint32(0,c),e=this.view.getInt32(0),c&=this.DHIGHBIT-1,s!=this.MY_DMINEXP)c|=this.DHIGHBIT;else for(s++;!(c&this.DHIGHBIT);)c<<=1,l&this.DMSBIT&&c++,l<<=1,s--;f=s,r=l,i=c,o=e<0?-1:1}return[o,i,r,f]}__decodeDouble_2Int(t,e,s,r,i){const[o,a,l,c]=this.__decodeDouble_2IntJS(i);this.memory.dataView.setBigInt64(h.unTag(t),BigInt(o),!0),this.memory.i64Store(e,a),this.memory.i64Store(s,l),this.memory.i64Store(r,c)}decodeDoubleInteger(t){const e=this.__decodeDouble_2IntJS(t),s=e[0],r=e[1],i=e[2],o=e[3];return[BigInt(s)*(BigInt(r)*(BigInt(1)<<BigInt(32))+BigInt(i)),o]}rintFloat(t){const e=this.FloatToIEEE(t);let s=BigInt(this.floatExponentFromBits(e)),r=BigInt(this.floatMantissaFromBits(e)),i=BigInt(this.floatSignFromBits(e));const o=()=>this.IEEEToFloat(Number(i<<BigInt(31)|s<<BigInt(23)|r));if(s>149)return t;if(s<126)return 0;const a=BigInt(1)<<BigInt(149)-s,l=BigInt(2)*a-BigInt(1);let c=r|BigInt(this.FLT_HIDDEN),f=c&l;return c^=f,f<a||f==a&&!(c&BigInt(2)*a)?c==0?0:(r=c^BigInt(this.FLT_HIDDEN),o()):(c+=BigInt(2)*a,c==this.FLT_POWER2?(r=BigInt(0),s+=BigInt(1),o()):(r=c^BigInt(this.FLT_HIDDEN),o()))}rintDouble(t){const e=this.DoubleToIEEE(t);let s=this.doubleExponentFromBits(e),r=this.doubleMantissaFromBits(e);this.view.setBigUint64(0,r,!0);let i=BigInt(this.view.getUint32(0,!0)),o=BigInt(this.view.getUint32(4,!0)),a=this.doubleSignFromBits(e);const l=()=>{this.view.setInt32(0,Number(i),!0),this.view.setInt32(4,Number(o),!0);const c=this.view.getBigUint64(0,!0),f=a<<BigInt(63)|s<<BigInt(52)|c;return Number(this.IEEEToDouble(f))};if(s>1074)return t;if(s<1022)return 0;if(s<1043){const c=BigInt(1)<<BigInt(1042)-s,f=BigInt(2)*c-BigInt(1);let m=o|BigInt(this.DBL_HIDDEN);const p=m&f;return m^=p,p<c||p==c&&i==0&&!(m&BigInt(2)*c)?m==0?0:(o=m^BigInt(this.DBL_HIDDEN),i=BigInt(0),l()):(i=BigInt(0),m+=BigInt(2)*c,m==this.DBL_POWER2?(o=BigInt(0),s+=BigInt(1),l()):(o=m^BigInt(this.DBL_HIDDEN),l()))}else{const c=BigInt(1)<<BigInt(1074)-s,f=BigInt(2)*c-BigInt(1);let m=i,p=m&f;return m^=p,p<c||p==c&&!(c==this.LTOP_BIT?o&1:m&2*c)?(i=m,l()):(m+=BigInt(2)*c,i=m,m%(BigInt(1)<<BigInt(32))==0?(m=o+BigInt(1),m==this.DBL_HIDDEN?(o=BigInt(0),s+=BigInt(1),l()):(u.ieee.mantissa0=m,l())):l())}}}const Se=Uint32Array.of(0,32,33,36,37,40,41,42,43,44,45,46,48,58,60,63,65,91,92,93,94,95,96,97,123,124,125,126,127,160,161,162,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,184,185,186,187,188,191,192,215,216,223,224,247,248,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,570,571,572,573,574,575,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,604,605,608,609,610,611,612,613,614,615,616,617,618,619,620,621,623,624,625,626,627,629,630,637,638,640,641,642,643,644,647,648,649,650,652,653,658,659,660,661,669,670,671,688,706,710,722,736,741,748,749,750,751,768,837,838,880,881,882,883,884,885,886,887,890,891,894,895,900,902,903,904,908,910,912,913,940,941,944,945,962,963,972,973,975,976,977,978,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1ee3,8008,8016,8017,8018,8019,8020,8021,8022,8023,8025,8032,8040,8048,8050,8054,8056,8058,8060,8064,8072,8080,8088,8096,8104,8112,8114,8115,8116,8120,8122,8124,8125,8126,8127,8130,8131,8132,8136,8140,8141,8144,8146,8152,8154,8157,8160,8162,8165,8166,8168,8170,8172,8173,8178,8179,8180,8184,8186,8188,8189,8192,8203,8208,8214,8216,8217,8218,8219,8221,8222,8223,8224,8232,8233,8234,8239,8240,8249,8250,8251,8255,8257,8260,8261,8262,8263,8274,8275,8276,8277,8287,8288,8304,8305,8308,8314,8317,8318,8319,8320,8330,8333,8334,8336,8352,8400,8413,8417,8418,8421,8448,8450,8451,8455,8456,8458,8459,8462,8464,8467,8468,8469,8470,8472,8473,8478,8484,8485,8486,8487,8488,8489,8490,8491,8492,8494,8495,8496,8498,8499,8500,8501,8505,8506,8508,8510,8512,8517,8518,8522,8523,8524,8526,8527,8528,8544,8560,8576,8579,8580,8581,8585,8586,8592,8597,8602,8604,8608,8609,8611,8612,8614,8615,8622,8623,8654,8656,8658,8659,8660,8661,8692,8960,8968,8969,8970,8971,8972,8992,8994,9001,9002,9003,9084,9085,9115,9140,9180,9186,9312,9372,9398,9424,9450,9472,9655,9656,9665,9666,9720,9728,9839,9840,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10132,10176,10181,10182,10183,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10240,10496,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10649,10712,10713,10714,10715,10716,10748,10749,10750,11008,11056,11077,11079,11085,11264,11312,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11383,11388,11390,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11493,11499,11500,11501,11502,11503,11506,11507,11513,11517,11518,11520,11568,11631,11632,11647,11648,11744,11776,11778,11779,11780,11781,11782,11785,11786,11787,11788,11789,11790,11799,11800,11802,11803,11804,11805,11806,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11818,11823,11824,11834,11836,11840,11841,11842,11843,11904,12288,12289,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12320,12321,12330,12334,12336,12337,12342,12344,12347,12348,12349,12350,12353,12441,12443,12445,12447,12448,12449,12539,12540,12543,12688,12690,12694,12704,12736,12784,12800,12832,12842,12872,12880,12881,12896,12928,12938,12977,12992,13312,19904,19968,40981,40982,42128,42192,42232,42238,42240,42508,42509,42512,42528,42538,42560,42561,42562,42563,42564,42565,42566,42567,42568,42569,42570,42571,42572,42573,42574,42575,42576,42577,42578,42579,42580,42581,42582,42583,42584,42585,42586,42587,42588,42589,42590,42591,42592,42593,42594,42595,42596,42597,42598,42599,42600,42601,42602,42603,42604,42605,42606,42607,42608,42611,42612,42622,42623,42624,42625,42626,42627,42628,42629,42630,42631,42632,42633,42634,42635,42636,42637,42638,42639,42640,42641,42642,42643,42644,42645,42646,42647,42648,42649,42650,42651,42652,42654,42656,42726,42736,42738,42752,42775,42784,42786,42787,42788,42789,42790,42791,42792,42793,42794,42795,42796,42797,42798,42799,42800,42802,42803,42804,42805,42806,42807,42808,42809,42810,42811,42812,42813,42814,42815,42816,42817,42818,42819,42820,42821,42822,42823,42824,42825,42826,42827,42828,42829,42830,42831,42832,42833,42834,42835,42836,42837,42838,42839,42840,42841,42842,42843,42844,42845,42846,42847,42848,42849,42850,42851,42852,42853,42854,42855,42856,42857,42858,42859,42860,42861,42862,42863,42864,42865,42873,42874,42875,42876,42877,42878,42879,42880,42881,42882,42883,42884,42885,42886,42887,42888,42889,42891,42892,42893,42894,42895,42896,42897,42898,42899,42900,42901,42902,42903,42904,42905,42906,42907,42908,42909,42910,42911,42912,42913,42914,42915,42916,42917,42918,42919,42920,42921,42922,42923,42924,42925,42926,42927,42928,42929,42930,42931,42932,42933,42934,42935,42936,42937,42938,42939,42940,42941,42942,42943,42946,42947,42948,42949,42950,42999,43e3,43002,43003,43010,43011,43014,43015,43019,43020,43043,43045,43047,43048,43056,43062,43064,43065,43072,43124,43136,43138,43188,43204,43214,43216,43232,43250,43256,43259,43260,43261,43263,43264,43274,43302,43310,43312,43335,43346,43359,43360,43392,43395,43396,43443,43444,43446,43450,43452,43453,43457,43471,43472,43486,43488,43493,43494,43495,43504,43514,43561,43567,43569,43571,43573,43584,43587,43588,43596,43597,43600,43612,43616,43632,43633,43639,43642,43643,43644,43645,43646,43696,43697,43698,43701,43703,43705,43710,43712,43713,43714,43741,43742,43744,43755,43756,43758,43760,43762,43763,43765,43766,43777,43824,43859,43860,43867,43868,43872,43888,43968,44003,44005,44006,44008,44009,44011,44012,44013,44016,44032,64256,64285,64286,64287,64297,64298,64434,64467,64830,64831,64848,65020,65021,65024,65040,65047,65048,65049,65056,65072,65073,65075,65077,65078,65079,65080,65081,65082,65083,65084,65085,65086,65087,65088,65089,65090,65091,65092,65093,65095,65096,65097,65101,65104,65112,65113,65114,65115,65116,65117,65118,65119,65122,65123,65124,65128,65129,65130,65136,65279,65281,65284,65285,65288,65289,65290,65291,65292,65293,65294,65296,65306,65308,65311,65313,65339,65340,65341,65342,65343,65344,65345,65371,65372,65373,65374,65375,65376,65377,65378,65379,65380,65382,65392,65393,65438,65440,65504,65506,65507,65508,65509,65512,65513,65517,65529,65532,65536,65792,65799,65847,65856,65909,65913,65930,65932,66045,66176,66272,66273,66304,66336,66349,66369,66370,66378,66384,66422,66432,66463,66464,66512,66513,66560,66600,66640,66720,66736,66776,66816,66927,67072,67671,67672,67680,67703,67705,67712,67751,67808,67835,67840,67862,67871,67872,67903,67968,68028,68030,68032,68096,68097,68112,68152,68160,68176,68192,68221,68223,68224,68253,68288,68296,68297,68325,68331,68336,68352,68409,68416,68440,68448,68472,68480,68505,68521,68608,68736,68800,68858,68864,68900,68912,69216,69376,69405,69415,69446,69457,69461,69600,69632,69633,69634,69635,69688,69703,69714,69734,69759,69762,69763,69808,69811,69815,69817,69819,69821,69822,69837,69840,69872,69888,69891,69927,69932,69933,69942,69952,69956,69957,69968,70003,70004,70006,70016,70018,70019,70067,70070,70079,70081,70085,70089,70093,70096,70106,70107,70108,70109,70113,70144,70188,70191,70194,70196,70197,70198,70200,70206,70272,70313,70320,70367,70368,70371,70384,70400,70402,70405,70459,70461,70462,70464,70465,70480,70487,70493,70498,70502,70656,70709,70712,70720,70722,70725,70726,70727,70731,70736,70747,70750,70751,70832,70835,70841,70842,70843,70847,70849,70850,70852,70854,70855,70864,71040,71087,71090,71096,71100,71102,71103,71105,71128,71132,71168,71216,71219,71227,71229,71230,71231,71233,71236,71248,71264,71296,71339,71340,71341,71342,71344,71350,71351,71352,71360,71424,71453,71456,71458,71462,71463,71472,71482,71484,71487,71680,71724,71727,71736,71737,71739,71840,71872,71904,71914,71935,72145,72146,72147,72148,72156,72160,72161,72164,72192,72193,72203,72243,72249,72250,72251,72255,72263,72272,72273,72279,72281,72284,72330,72343,72344,72346,72349,72350,72384,72751,72752,72766,72767,72768,72769,72784,72794,72816,72818,72850,72873,72874,72881,72882,72884,72885,72960,73009,73030,73031,73040,73056,73098,73104,73107,73109,73110,73111,73112,73120,73440,73459,73461,73463,73664,73685,73693,73697,73727,73728,74752,74864,74880,78896,82944,92768,92782,92880,92912,92917,92928,92976,92983,92988,92992,92996,92997,93008,93019,93027,93760,93792,93824,93847,93952,94031,94032,94033,94095,94099,94178,94179,94208,113820,113821,113823,113824,118784,119141,119143,119146,119149,119155,119163,119171,119173,119180,119210,119214,119362,119365,119520,119552,119648,119808,119834,119860,119886,119912,119938,119964,119990,120016,120042,120068,120094,120120,120146,120172,120198,120224,120250,120276,120302,120328,120354,120380,120406,120432,120458,120488,120513,120514,120539,120540,120546,120571,120572,120597,120598,120604,120629,120630,120655,120656,120662,120687,120688,120713,120714,120720,120745,120746,120771,120772,120778,120779,120782,120832,121344,121399,121403,121453,121461,121462,121476,121477,121479,121499,123136,123184,123191,123200,123214,123628,123632,123647,124928,125127,125136,125184,125218,125252,125264,125278,126065,126124,126125,126128,126129,126254,126255,126464,126704,126976,127232,127248,127995,128e3,131072,917505,917760),Te=Uint32Array.of(31,32,35,36,39,40,41,42,43,44,45,47,57,59,62,64,90,91,92,93,94,95,96,122,123,124,125,126,159,160,161,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,183,184,185,186,187,190,191,214,215,222,223,246,247,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,569,570,571,572,573,574,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,600,601,602,603,604,607,608,609,610,611,612,613,614,615,616,617,618,619,620,622,623,624,625,626,628,629,636,637,639,640,641,642,643,646,647,648,649,651,652,657,658,659,660,668,669,670,687,705,709,721,735,740,747,748,749,750,767,836,837,879,880,881,882,883,884,885,886,887,890,893,894,895,901,902,903,906,908,911,912,939,940,943,944,961,962,971,972,974,975,976,977,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1023,1039,1071,1103,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1366,1369,1375,1376,1414,1416,1417,1418,1422,1423,1469,1470,1471,1472,1474,1475,1477,1478,1479,1522,1524,1541,1544,1546,1547,1549,1551,1562,1563,1564,1567,1599,1600,1610,1631,1641,1645,1647,1648,1747,1748,1749,1756,1757,1758,1764,1766,1768,1769,1773,1775,1785,1788,1790,1791,1805,1807,1808,1809,1839,1866,1957,1968,1969,1993,2026,2035,2037,2038,2041,2042,2045,2047,2069,2073,2074,2083,2084,2087,2088,2093,2110,2136,2139,2142,2237,2273,2274,2306,2307,2361,2362,2363,2364,2365,2368,2376,2380,2381,2383,2384,2391,2401,2403,2405,2415,2416,2417,2432,2433,2435,2489,2492,2493,2496,2500,2508,2509,2510,2519,2529,2531,2543,2545,2547,2553,2554,2555,2556,2557,2562,2563,2617,2620,2624,2641,2654,2671,2673,2676,2677,2678,2690,2691,2745,2748,2749,2752,2760,2764,2765,2785,2787,2799,2800,2801,2809,2817,2819,2873,2876,2877,2878,2879,2880,2884,2892,2902,2903,2913,2915,2927,2928,2929,2935,2946,3001,3007,3008,3020,3021,3024,3031,3055,3058,3064,3065,3066,3072,3075,3076,3133,3136,3140,3158,3169,3171,3183,3191,3198,3199,3200,3201,3203,3204,3257,3260,3261,3262,3263,3268,3270,3275,3277,3286,3297,3299,3311,3314,3329,3331,3386,3388,3389,3392,3396,3404,3405,3406,3407,3414,3415,3422,3425,3427,3439,3448,3449,3455,3459,3526,3530,3537,3542,3551,3567,3571,3572,3632,3633,3635,3642,3647,3653,3654,3662,3663,3673,3675,3760,3761,3763,3772,3780,3782,3789,3801,3840,3843,3858,3859,3860,3863,3865,3871,3881,3891,3892,3893,3894,3895,3896,3897,3898,3899,3900,3901,3903,3948,3966,3967,3972,3973,3975,3980,4028,4037,4038,4047,4052,4056,4058,4138,4140,4144,4145,4151,4152,4154,4156,4158,4159,4169,4175,4181,4183,4185,4189,4192,4193,4196,4198,4205,4208,4212,4225,4226,4228,4230,4236,4237,4238,4239,4249,4252,4253,4255,4301,4346,4347,4348,4351,4954,4959,4968,4988,5007,5017,5103,5109,5117,5120,5740,5742,5759,5760,5786,5787,5788,5866,5869,5872,5905,5908,5937,5940,5942,5969,5971,6e3,6003,6067,6069,6070,6077,6085,6086,6088,6099,6102,6103,6106,6107,6108,6109,6121,6137,6149,6150,6154,6157,6158,6169,6210,6211,6276,6278,6312,6313,6430,6434,6438,6440,6449,6450,6456,6459,6464,6469,6479,6601,6617,6618,6655,6678,6680,6682,6683,6687,6740,6741,6742,6743,6752,6753,6754,6756,6764,6770,6783,6809,6822,6823,6829,6845,6846,6915,6916,6963,6964,6965,6970,6971,6972,6977,6978,6980,6987,7001,7008,7018,7027,7036,7041,7042,7072,7073,7077,7079,7081,7082,7085,7087,7097,7141,7142,7143,7145,7148,7149,7150,7153,7155,7167,7203,7211,7219,7221,7223,7231,7241,7247,7257,7287,7293,7295,7296,7297,7298,7300,7301,7302,7303,7304,7359,7367,7378,7379,7392,7393,7400,7404,7405,7411,7412,7414,7415,7417,7418,7467,7530,7543,7544,7545,7548,7549,7565,7566,7578,7615,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690,7691,7692,7693,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719,7720,7721,7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748,7749,7750,7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777,7778,7779,7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806,7807,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7834,7835,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7943,7951,7957,7965,7975,7983,7991,7999,8005,8013,8016,8017,8018,8019,8020,8021,8022,8023,8031,8039,8047,8049,8053,8055,8057,8059,8061,8071,8079,8087,8095,8103,8111,8113,8114,8115,8119,8121,8123,8124,8125,8126,8129,8130,8131,8135,8139,8140,8143,8145,8151,8153,8155,8159,8161,8164,8165,8167,8169,8171,8172,8175,8178,8179,8183,8185,8187,8188,8190,8202,8207,8213,8215,8216,8217,8218,8220,8221,8222,8223,8231,8232,8233,8238,8239,8248,8249,8250,8254,8256,8259,8260,8261,8262,8273,8274,8275,8276,8286,8287,8303,8304,8305,8313,8316,8317,8318,8319,8329,8332,8333,8334,8348,8383,8412,8416,8417,8420,8432,8449,8450,8454,8455,8457,8458,8461,8463,8466,8467,8468,8469,8471,8472,8477,8483,8484,8485,8486,8487,8488,8489,8490,8491,8493,8494,8495,8497,8498,8499,8500,8504,8505,8507,8509,8511,8516,8517,8521,8522,8523,8525,8526,8527,8543,8559,8575,8578,8579,8580,8584,8585,8587,8596,8601,8603,8607,8608,8610,8611,8613,8614,8621,8622,8653,8655,8657,8658,8659,8660,8691,8959,8967,8968,8969,8970,8971,8991,8993,9e3,9001,9002,9083,9084,9114,9139,9179,9185,9290,9371,9397,9423,9449,9471,9654,9655,9664,9665,9719,9727,9838,9839,10087,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10131,10175,10180,10181,10182,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10239,10495,10626,10627,10628,10629,10630,10631,10632,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10711,10712,10713,10714,10715,10747,10748,10749,11007,11055,11076,11078,11084,11263,11310,11358,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,11378,11379,11380,11381,11382,11387,11389,11391,11392,11393,11394,11395,11396,11397,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,11498,11499,11500,11501,11502,11505,11506,11507,11516,11517,11519,11565,11623,11631,11632,11647,11742,11775,11777,11778,11779,11780,11781,11784,11785,11786,11787,11788,11789,11798,11799,11801,11802,11803,11804,11805,11807,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11822,11823,11833,11835,11839,11840,11841,11842,11855,12283,12288,12291,12292,12293,12294,12295,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12319,12320,12329,12333,12335,12336,12341,12343,12346,12347,12348,12349,12351,12438,12442,12444,12446,12447,12448,12538,12539,12542,12686,12689,12693,12703,12730,12771,12799,12830,12841,12871,12879,12880,12895,12927,12937,12976,12991,13311,19893,19967,40980,40981,42124,42182,42231,42237,42239,42507,42508,42511,42527,42537,42539,42560,42561,42562,42563,42564,42565,42566,42567,42568,42569,42570,42571,42572,42573,42574,42575,42576,42577,42578,42579,42580,42581,42582,42583,42584,42585,42586,42587,42588,42589,42590,42591,42592,42593,42594,42595,42596,42597,42598,42599,42600,42601,42602,42603,42604,42605,42606,42607,42610,42611,42621,42622,42623,42624,42625,42626,42627,42628,42629,42630,42631,42632,42633,42634,42635,42636,42637,42638,42639,42640,42641,42642,42643,42644,42645,42646,42647,42648,42649,42650,42651,42653,42655,42725,42735,42737,42743,42774,42783,42785,42786,42787,42788,42789,42790,42791,42792,42793,42794,42795,42796,42797,42798,42799,42801,42802,42803,42804,42805,42806,42807,42808,42809,42810,42811,42812,42813,42814,42815,42816,42817,42818,42819,42820,42821,42822,42823,42824,42825,42826,42827,42828,42829,42830,42831,42832,42833,42834,42835,42836,42837,42838,42839,42840,42841,42842,42843,42844,42845,42846,42847,42848,42849,42850,42851,42852,42853,42854,42855,42856,42857,42858,42859,42860,42861,42862,42863,42864,42872,42873,42874,42875,42876,42877,42878,42879,42880,42881,42882,42883,42884,42885,42886,42887,42888,42890,42891,42892,42893,42894,42895,42896,42897,42898,42899,42900,42901,42902,42903,42904,42905,42906,42907,42908,42909,42910,42911,42912,42913,42914,42915,42916,42917,42918,42919,42920,42921,42922,42923,42924,42925,42926,42927,42928,42929,42930,42931,42932,42933,42934,42935,42936,42937,42938,42939,42940,42941,42942,42943,42946,42947,42948,42949,42950,42999,43001,43002,43009,43010,43013,43014,43018,43019,43042,43044,43046,43047,43051,43061,43063,43064,43065,43123,43127,43137,43187,43203,43205,43215,43225,43249,43255,43258,43259,43260,43262,43263,43273,43301,43309,43311,43334,43345,43347,43359,43388,43394,43395,43442,43443,43445,43449,43451,43452,43456,43469,43471,43481,43487,43492,43493,43494,43503,43513,43560,43566,43568,43570,43572,43574,43586,43587,43595,43596,43597,43609,43615,43631,43632,43638,43641,43642,43643,43644,43645,43695,43696,43697,43700,43702,43704,43709,43711,43712,43713,43740,43741,43743,43754,43755,43757,43759,43761,43762,43764,43765,43766,43822,43858,43859,43866,43867,43871,43879,43967,44002,44004,44005,44007,44008,44010,44011,44012,44013,44025,64217,64279,64285,64286,64296,64297,64433,64449,64829,64830,64831,65019,65020,65021,65039,65046,65047,65048,65049,65071,65072,65074,65076,65077,65078,65079,65080,65081,65082,65083,65084,65085,65086,65087,65088,65089,65090,65091,65092,65094,65095,65096,65100,65103,65111,65112,65113,65114,65115,65116,65117,65118,65121,65122,65123,65126,65128,65129,65131,65276,65279,65283,65284,65287,65288,65289,65290,65291,65292,65293,65295,65305,65307,65310,65312,65338,65339,65340,65341,65342,65343,65344,65370,65371,65372,65373,65374,65375,65376,65377,65378,65379,65381,65391,65392,65437,65439,65500,65505,65506,65507,65508,65510,65512,65516,65518,65531,65533,65786,65794,65843,65855,65908,65912,65929,65931,66044,66045,66256,66272,66299,66335,66339,66368,66369,66377,66378,66421,66426,66461,66463,66511,66512,66517,66599,66639,66717,66729,66771,66811,66915,66927,67669,67671,67679,67702,67704,67711,67742,67759,67829,67839,67861,67867,67871,67897,67903,68023,68029,68031,68095,68096,68111,68149,68159,68168,68184,68220,68222,68223,68252,68255,68295,68296,68324,68326,68335,68342,68405,68415,68437,68447,68466,68479,68497,68508,68527,68680,68786,68850,68863,68899,68903,68921,69246,69404,69414,69445,69456,69460,69465,69622,69632,69633,69634,69687,69702,69709,69733,69743,69761,69762,69807,69810,69814,69816,69818,69820,69821,69825,69837,69864,69881,69890,69926,69931,69932,69940,69951,69955,69956,69958,70002,70003,70005,70006,70017,70018,70066,70069,70078,70080,70084,70088,70092,70093,70105,70106,70107,70108,70111,70132,70187,70190,70193,70195,70196,70197,70199,70205,70206,70312,70313,70366,70367,70370,70378,70393,70401,70403,70457,70460,70461,70463,70464,70477,70480,70487,70497,70499,70516,70708,70711,70719,70721,70724,70725,70726,70730,70735,70745,70749,70750,70831,70834,70840,70841,70842,70846,70848,70849,70851,70853,70854,70855,70873,71086,71089,71093,71099,71101,71102,71104,71127,71131,71133,71215,71218,71226,71228,71229,71230,71232,71235,71236,71257,71276,71338,71339,71340,71341,71343,71349,71350,71351,71352,71369,71450,71455,71457,71461,71462,71467,71481,71483,71486,71487,71723,71726,71735,71736,71738,71739,71871,71903,71913,71922,72144,72145,72146,72147,72155,72159,72160,72163,72164,72192,72202,72242,72248,72249,72250,72254,72262,72263,72272,72278,72280,72283,72329,72342,72343,72345,72348,72349,72354,72750,72751,72765,72766,72767,72768,72773,72793,72812,72817,72847,72871,72873,72880,72881,72883,72884,72886,73008,73029,73030,73031,73049,73097,73102,73105,73108,73109,73110,73111,73112,73129,73458,73460,73462,73464,73684,73692,73696,73713,73727,74649,74862,74868,78894,78904,92766,92777,92783,92909,92916,92917,92975,92982,92987,92991,92995,92996,92997,93017,93025,93071,93791,93823,93846,93850,94026,94031,94032,94087,94098,94177,94178,94179,113817,113820,113822,113823,113827,119140,119142,119145,119148,119154,119162,119170,119172,119179,119209,119213,119361,119364,119365,119539,119638,119672,119833,119859,119885,119911,119937,119963,119989,120015,120041,120067,120092,120119,120144,120171,120197,120223,120249,120275,120301,120327,120353,120379,120405,120431,120457,120485,120512,120513,120538,120539,120545,120570,120571,120596,120597,120603,120628,120629,120654,120655,120661,120686,120687,120712,120713,120719,120744,120745,120770,120771,120777,120778,120779,120831,121343,121398,121402,121452,121460,121461,121475,121476,121478,121483,122922,123180,123190,123197,123209,123627,123631,123641,123647,125124,125135,125142,125217,125251,125258,125273,125279,126123,126124,126127,126128,126253,126254,126269,126651,126705,127221,127244,127994,127999,129685,195101,917631,917999),Ie=Uint8Array.of(0,1,2,3,2,4,5,2,6,2,7,2,8,2,6,2,9,4,2,5,10,11,10,12,4,6,5,6,0,1,2,3,13,2,10,13,14,15,6,16,13,10,13,6,17,10,18,2,10,17,14,19,17,2,9,6,9,20,12,6,12,21,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,24,25,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,26,22,23,22,23,22,23,27,28,29,22,23,22,23,30,22,23,31,22,23,20,32,33,34,22,23,31,35,36,37,38,22,23,39,20,37,40,41,42,22,23,22,23,22,23,43,22,23,43,20,22,23,43,22,23,44,22,23,22,23,45,22,23,20,14,22,23,20,46,14,47,48,49,47,48,49,47,48,49,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,50,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,47,48,49,22,23,51,52,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,53,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,54,22,23,55,56,57,22,23,58,59,60,22,23,22,23,22,23,22,23,22,23,61,62,63,64,65,20,66,20,67,20,68,69,20,66,70,20,71,20,72,73,20,74,75,73,76,77,20,75,20,78,79,20,80,20,81,20,82,20,83,82,20,84,82,85,86,87,20,88,20,14,20,89,90,20,91,10,91,10,91,10,91,10,91,10,92,93,92,22,23,22,23,91,10,22,23,91,41,2,94,10,95,2,96,97,98,20,9,99,100,20,12,101,12,102,103,104,105,106,107,108,109,110,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,111,112,113,114,115,116,6,22,23,117,22,23,20,53,118,9,12,112,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,13,92,119,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,120,22,23,22,23,22,23,22,23,22,23,22,23,22,23,121,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,122,91,2,20,123,20,2,7,13,3,92,7,92,2,92,2,92,2,92,14,2,16,6,2,3,2,13,92,2,16,2,14,91,14,92,8,2,14,92,14,2,14,92,16,13,92,91,92,13,92,14,8,14,13,14,2,16,14,92,14,92,14,92,14,8,14,92,91,13,2,91,92,3,14,92,91,92,91,92,91,92,2,14,92,2,14,92,16,92,124,14,92,124,92,14,124,92,124,92,124,14,92,14,92,2,8,2,91,14,92,124,14,92,14,124,92,124,92,14,124,14,92,8,14,3,17,13,3,14,2,92,124,14,92,124,92,14,8,92,14,92,2,92,124,14,92,14,124,92,124,92,14,92,8,2,3,14,92,124,14,92,14,124,92,124,92,124,92,124,14,92,8,13,14,17,92,14,124,92,124,92,14,124,8,17,13,3,13,92,124,92,14,92,124,92,14,92,8,2,17,13,14,92,124,2,14,92,14,124,92,124,92,124,92,124,14,92,8,14,92,124,14,92,14,124,92,124,92,14,13,14,124,17,14,92,8,17,13,14,124,14,92,124,92,124,8,124,2,14,92,14,92,3,14,91,92,2,8,2,14,92,14,92,14,91,92,8,14,13,2,13,2,13,92,13,8,17,13,92,13,92,13,92,4,5,4,5,124,14,92,124,92,2,92,14,92,13,92,13,2,13,2,14,124,92,124,92,124,92,124,92,14,8,2,14,124,92,14,92,14,124,14,124,14,92,14,92,124,92,124,92,14,124,8,124,92,13,125,126,2,91,126,14,92,2,17,14,13,127,104,110,7,14,2,14,1,14,4,5,14,2,128,14,92,14,92,2,14,92,14,92,14,92,124,92,124,92,124,92,2,91,2,3,14,92,8,17,2,7,2,92,16,8,14,91,14,92,14,92,14,92,124,92,124,92,124,92,13,2,8,14,8,17,13,14,92,124,92,2,14,124,92,124,92,124,92,124,92,124,92,8,2,91,2,92,119,92,124,14,92,124,92,124,92,124,92,124,14,8,2,13,92,13,92,124,14,124,92,124,92,124,92,14,8,14,92,124,92,124,92,124,92,124,2,14,124,92,124,92,2,8,14,8,14,91,2,129,130,131,132,133,134,135,136,137,2,92,2,92,124,92,14,92,14,92,14,124,92,14,20,91,20,91,138,20,139,20,140,20,91,92,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,141,20,142,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,143,144,143,144,143,144,143,144,143,144,20,143,20,143,20,143,20,143,144,143,144,145,146,147,148,149,150,143,151,143,151,143,151,143,20,152,20,144,153,154,10,155,10,20,152,20,156,154,10,143,20,144,157,10,143,20,113,20,144,158,117,10,20,152,20,159,160,154,10,1,16,7,2,15,19,4,15,19,4,15,2,161,162,16,1,2,15,19,2,11,2,6,4,5,2,6,2,11,2,1,16,17,91,17,6,4,5,91,17,6,4,5,91,3,92,119,92,119,92,13,107,13,107,13,20,107,20,107,20,13,107,13,6,107,13,107,13,163,13,107,13,164,165,107,13,20,107,166,107,20,14,20,13,20,107,6,107,20,13,6,13,167,13,17,168,169,128,22,23,128,17,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,6,13,4,5,4,5,13,6,13,4,5,13,6,13,6,13,6,13,17,13,170,171,17,13,6,13,6,13,6,13,6,13,4,5,4,5,4,5,4,5,4,5,4,5,4,5,17,13,6,4,5,6,4,5,4,5,4,5,4,5,4,5,6,13,6,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,6,4,5,4,5,6,4,5,6,13,6,13,6,13,122,123,22,23,172,173,174,175,176,22,23,22,23,22,23,177,178,179,180,20,22,23,20,22,23,20,91,181,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,13,22,23,22,23,92,22,23,2,17,2,182,14,91,2,92,14,92,2,15,19,15,19,2,15,19,2,15,19,2,7,2,7,2,15,19,2,15,19,4,5,4,5,4,5,4,5,2,91,2,7,2,7,2,4,2,13,1,2,13,91,14,128,4,5,4,5,4,5,4,5,4,5,13,4,5,4,5,4,5,4,5,7,4,5,13,128,92,124,7,91,13,128,91,14,2,13,14,92,10,91,14,7,14,2,91,14,13,17,13,14,13,14,13,17,13,17,13,17,13,17,13,17,13,14,13,14,91,14,13,14,91,2,14,91,2,14,8,14,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,14,92,119,2,92,2,91,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,91,92,14,128,92,2,10,91,10,22,23,22,23,22,23,22,23,22,23,22,23,22,23,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,91,20,22,23,22,23,183,22,23,22,23,22,23,22,23,22,23,91,10,22,23,184,20,14,22,23,22,23,185,20,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,186,187,188,189,186,20,190,191,192,193,22,23,22,23,22,23,22,23,22,23,22,23,22,23,194,195,196,14,91,20,14,92,14,92,14,92,14,124,92,124,13,17,13,3,13,14,2,124,14,124,92,2,8,92,14,2,14,2,14,92,8,14,92,2,14,92,124,2,14,92,124,14,92,124,92,124,92,124,2,91,8,2,14,92,91,14,8,14,92,124,92,124,92,14,92,14,92,124,8,2,14,91,14,13,14,124,92,124,14,92,14,92,14,92,14,92,14,92,14,91,2,14,124,92,124,2,14,91,124,92,14,20,197,20,10,91,20,198,14,124,92,124,92,124,2,124,92,8,14,20,14,92,14,6,14,10,14,5,4,14,3,13,92,2,4,5,2,92,2,7,11,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,2,4,5,2,11,2,7,4,5,4,5,4,5,2,6,7,6,2,3,2,14,16,2,3,2,4,5,2,6,2,7,2,8,2,6,2,9,4,2,5,10,11,10,12,4,6,5,6,4,5,2,4,5,2,14,91,14,91,14,3,6,10,13,3,13,6,13,16,13,14,2,17,13,128,17,13,17,13,92,14,92,17,14,17,14,128,14,128,14,92,14,2,14,2,128,199,200,14,8,199,200,14,2,14,2,17,14,13,17,14,17,14,17,14,17,2,14,2,14,17,14,17,14,92,14,92,17,2,14,17,2,14,17,14,13,14,92,17,2,14,2,14,17,14,17,14,2,17,14,97,102,17,14,92,8,17,14,17,14,92,17,2,14,124,92,124,14,92,2,17,8,92,124,14,124,92,124,92,2,16,2,16,14,8,92,14,92,124,92,8,2,14,124,14,92,2,14,92,124,14,124,92,124,14,2,92,2,8,14,2,14,2,17,14,124,92,124,92,124,92,2,92,14,2,14,92,124,92,8,92,124,14,92,14,124,92,124,14,124,14,124,92,14,124,92,124,92,124,92,14,2,8,2,92,14,124,92,124,92,124,92,124,92,14,2,14,8,14,124,92,124,92,124,92,2,14,92,14,124,92,124,92,124,92,2,14,8,2,14,92,124,92,124,92,124,92,14,8,14,92,124,92,124,92,8,17,2,13,14,124,92,124,92,2,9,12,8,17,14,124,92,124,92,124,92,14,124,14,92,14,92,124,14,92,2,92,14,92,124,92,14,92,124,92,2,14,2,14,124,92,124,92,14,2,8,17,2,14,92,124,92,124,92,124,92,14,92,14,92,8,14,124,92,124,92,124,92,14,8,14,92,124,2,17,13,3,13,2,14,128,2,14,16,14,8,2,14,92,2,14,92,2,13,91,2,13,8,17,14,9,12,17,2,14,92,14,124,92,91,2,91,14,13,92,2,16,13,124,92,13,124,16,92,13,92,13,92,13,92,13,17,13,17,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,6,20,6,20,107,20,8,13,92,13,92,13,92,13,92,13,2,92,14,92,91,8,14,92,8,3,14,17,92,201,202,92,8,2,17,13,17,3,17,13,17,14,6,13,17,13,10,13,14,16,92),xe=Uint8Array.of(25,22,17,19,13,14,18,12,8,0,20,11,1,21,4,15,26,10,1,16,1,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,2,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,5,5,0,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,0,7,0,1,0,1,6,0,1,0,9,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,2,1,0,2,1,0,0,0,0,0,23,24,0,0,0,0,1,9,9,21,21,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1),Ae=Int32Array.of(0,0,0,0,0,0,0,0,0,0,0,0,-32,0,0,0,0,0,743,0,0,121,0,-1,0,-232,0,-300,195,0,0,0,0,0,0,0,97,0,0,163,0,130,0,0,0,0,56,0,-1,-2,-79,0,0,0,0,0,0,10815,0,0,0,10783,10780,10782,-210,-206,-205,-202,-203,42319,42315,-207,42280,42308,-209,-211,10743,42305,10749,-213,-214,10727,-218,42307,42282,-69,-217,-71,-219,42261,42258,0,0,84,0,0,0,0,0,-38,-37,-31,-64,-63,0,-62,-57,0,-47,-54,-8,-86,-80,7,-116,0,-96,0,0,0,0,-15,0,-48,0,0,3008,0,0,-6254,-6253,-6244,-6242,-6243,-6236,-6181,35266,0,35332,3814,35384,-59,0,8,0,74,86,100,128,112,126,0,9,0,0,-7205,0,0,0,0,0,0,0,0,0,0,0,-28,0,-16,0,-26,0,0,0,-10795,-10792,0,0,0,0,0,-7264,0,0,48,0,0,0,0,0,0,0,0,0,0,0,-928,-38864,0,-40,0,-34),Ee=Int32Array.of(0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-199,0,-121,0,0,210,206,205,79,202,203,207,0,211,209,0,213,0,214,218,217,219,0,2,1,0,0,-97,-56,-130,10795,-163,10792,0,-195,69,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,38,37,64,63,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,-60,0,-7,80,0,15,0,48,0,0,7264,0,38864,0,0,0,0,0,0,0,0,0,-3008,0,0,0,0,-7615,0,-8,0,0,0,0,0,0,-8,0,-74,-9,0,-86,-100,-112,-128,-126,0,0,-7517,-8383,-8262,28,0,16,0,26,0,-10743,-3814,-10727,0,0,-10780,-10749,-10783,-10782,-10815,0,-35332,-42280,0,-42308,-42319,-42315,-42305,-42258,-42282,-42261,928,-48,-42307,-35384,0,0,40,0,34,0),Be=Int32Array.of(0,0,0,0,0,0,0,0,0,0,0,0,-32,0,0,0,0,0,743,0,0,121,0,-1,0,-232,0,-300,195,0,0,0,0,0,0,0,97,0,0,163,0,130,0,0,0,0,56,1,0,-1,-79,0,0,0,0,0,0,10815,0,0,0,10783,10780,10782,-210,-206,-205,-202,-203,42319,42315,-207,42280,42308,-209,-211,10743,42305,10749,-213,-214,10727,-218,42307,42282,-69,-217,-71,-219,42261,42258,0,0,84,0,0,0,0,0,-38,-37,-31,-64,-63,0,-62,-57,0,-47,-54,-8,-86,-80,7,-116,0,-96,0,0,0,0,-15,0,-48,0,0,0,0,0,-6254,-6253,-6244,-6242,-6243,-6236,-6181,35266,0,35332,3814,35384,-59,0,8,0,74,86,100,128,112,126,0,9,0,0,-7205,0,0,0,0,0,0,0,0,0,0,0,-28,0,-16,0,-26,0,0,0,-10795,-10792,0,0,0,0,0,-7264,0,0,48,0,0,0,0,0,0,0,0,0,0,0,-928,-38864,0,-40,0,-34);function F2(n,t,e){const s=t+1==e,r=~~((t+e)/2);return n<Se[r]?s?-1:F2(n,t,r):n<=Te[r]?r:s?-1:F2(n,r,e)}function Y(n,t){const e=F2(t,0,t+1);return e==-1?0:n[Ie[e]]}class ke{constructor(t){Object.seal(this)}u_gencat(t){return Y(xe,t)}u_iswupper(t){return!!(1<<this.u_gencat(t)&5)}u_iswlower(t){return!!(1<<this.u_gencat(t)&2)}u_iswspace(t){return!!(1<<this.u_gencat(t)&4194304)}u_iswalpha(t){return!!(1<<this.u_gencat(t)&31)}u_iswdigit(t){return!!(1<<this.u_gencat(t)&256)}u_iswalnum(t){return!!(1<<this.u_gencat(t)&1823)}u_iswprint(t){return!!(1<<this.u_gencat(t)&8388607)}u_iswcntrl(t){return!!(1<<this.u_gencat(t)&33554432)}u_towlower(t){return t+Y(Ee,t)}u_towupper(t){return t+Y(Ae,t)}u_towtitle(t){return t+Y(Be,t)}}function L1(n,t){const e=[];for(;t;){const s=(t&31)-1;if(!n[s])throw new WebAssembly.RuntimeError(`decodeTys: unsupported tag ${t}`);e.push(n[s]),t>>>=5}return e}function ve(n,t){switch(t){case"JSVal":return e=>n.rts_mkJSVal(n.context.stablePtrManager.newJSVal(e));default:{const e=`rts_mk${t}`;return s=>n[e](s)}}}function Re(n,t){switch(t){case"JSVal":return e=>n.context.stablePtrManager.getJSVal(n.rts_getJSVal(e));default:{const e=`rts_get${t}`;return s=>n[e](s)}}}class Le{constructor(t,e,s,r,i){this.context=Object.freeze({memory:t,reentrancyGuard:e,symbolTable:s,scheduler:r,stablePtrManager:i,callbackStablePtrs:new Map,rtsMkFuncs:C2.map(o=>ve(this,o)),rtsGetFuncs:C2.map(o=>Re(this,o))})}rts_evalIO(t){return this.context.scheduler.submitCmdCreateThread("createStrictIOThread",t)}rts_evalLazyIO(t){return this.context.scheduler.submitCmdCreateThread("createIOThread",t)}newHaskellCallback(t,e,s,r,i){const o=L1(this.context.rtsMkFuncs,e),a=L1(this.context.rtsGetFuncs,s),l=this.context.symbolTable.addressOf(r?"base_AsteriusziTopHandler_runIO_closure":"base_AsteriusziTopHandler_runNonIO_closure"),c=a.length?m=>this.rts_evalIO(m):m=>this.rts_evalLazyIO(m);if(a.length>1)throw new WebAssembly.RuntimeError("Multiple returns not supported");const f=async(...m)=>{try{if(m.length<o.length)throw new WebAssembly.RuntimeError(`Expected ${o.length} arguments, got ${m.length}`);let p=this.context.stablePtrManager.deRefStablePtr(t);for(let B=0;B<o.length;++B)p=this.rts_apply(p,o[B](m[B]));p=this.rts_apply(l,p);const A=await c(p);if(a.length)return a[0](this.context.scheduler.getTSOret(A))}finally{i()}};return this.context.callbackStablePtrs.set(f,t),f}freeHaskellCallback(t){const e=this.context.stablePtrManager.getJSVal(t);this.context.stablePtrManager.freeStablePtr(this.context.callbackStablePtrs.get(e)),this.context.callbackStablePtrs.delete(e),this.context.stablePtrManager.freeJSVal(t)}}class N1{constructor(t,e){this.flush=t,this.consoleHistory=e,this.history="",this.buffer="",this.decoder=new TextDecoder("utf-8",{fatal:!0}),Object.seal(this)}read(){const t=this.history;return this.history="",t}write(t){const e=typeof t=="string"?t:this.decoder.decode(t,{stream:!0});this.consoleHistory&&(this.history+=e),this.buffer+=e;const s=this.buffer.split(`
`);this.buffer=s.pop();for(const r of s)this.flush(r);return t.length}}class Ne{constructor(t){this.components=t,this.stdout=new N1(console.log,!0),this.stderr=new N1(console.error,!0)}read(t,e,s){throw new WebAssembly.RuntimeError(`Attempting to read(${t}, ${e}, ${s})`)}write(t,e,s){switch(e=this.components.memory.expose(e,s,Uint8Array),t){case 1:return this.stdout.write(e);case 2:return this.stderr.write(e);default:throw new WebAssembly.RuntimeError(`Attempting to write(${t}, ${e}, ${s})`)}}writeNonMemory(t,e){switch(t){case 1:{this.stdout.write(e);break}case 2:{this.stderr.write(e);break}default:throw new WebAssembly.RuntimeError(`writeNonMemory(${t}, ${e})`)}}history(t){switch(t){case 1:return this.stdout.read();case 2:return this.stderr.read();default:throw new WebAssembly.RuntimeError(`Attempting to get history of ${t}`)}}}class Me{constructor(t,e,s,r){this.symbolTable=new Map;for(const[i,o]of Object.entries(t))this.symbolTable.set(i,h.tagFunction(s+o));for(const[i,o]of Object.entries(e))this.symbolTable.set(i,h.tagData(r+o));Object.freeze(this)}addressOf(t){if(!this.symbolTable.has(t))throw new WebAssembly.RuntimeError(`${t} not in symbol table`);return this.symbolTable.get(t)}allEntries(){return this.symbolTable}}class Oe{constructor(){}get wasiImport(){return S(this)}initialize(){}args_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: args_get")}args_sizes_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: args_sizes_get")}environ_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: environ_get")}environ_sizes_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: environ_sizes_get")}clock_res_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: clock_res_get")}clock_time_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: clock_time_get")}fd_advise(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_advise")}fd_allocate(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_allocate")}fd_close(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_close")}fd_datasync(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_datasync")}fd_fdstat_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_fdstat_get")}fd_fdstat_set_flags(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_fdstat_set_flags")}fd_fdstat_set_rights(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_fdstat_set_rights")}fd_filestat_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_filestat_get")}fd_filestat_set_size(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_filestat_set_size")}fd_filestat_set_times(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_filestat_set_times")}fd_pread(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_pread")}fd_prestat_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_prestat_get")}fd_prestat_dir_name(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_prestat_dir_name")}fd_pwrite(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_pwrite")}fd_read(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_read")}fd_readdir(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_readdir")}fd_renumber(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_renumber")}fd_seek(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_seek")}fd_sync(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_sync")}fd_tell(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_tell")}fd_write(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: fd_write")}path_create_directory(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_create_directory")}path_filestat_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_filestat_get")}path_filestat_set_times(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_filestat_set_times")}path_link(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_link")}path_open(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_open")}path_readlink(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_readlink")}path_remove_directory(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_remove_directory")}path_rename(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_rename")}path_symlink(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_symlink")}path_unlink_file(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: path_unlink_file")}poll_oneoff(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: poll_oneoff")}proc_exit(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: proc_exit")}proc_raise(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: proc_raise")}sched_yield(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: sched_yield")}random_get(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: random_get")}sock_recv(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: sock_recv")}sock_send(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: sock_send")}sock_shutdown(){throw new WebAssembly.RuntimeError("Unsupported wasi syscall: sock_shutdown")}}async function Z(n){const t={};let e=new WebAssembly.Global({value:"i32",mutable:!1},n.defaultTableBase),s=new WebAssembly.Global({value:"i32",mutable:!1},n.defaultMemoryBase),r=function(d){const w=new Map;for(const[x,D]of d.entries())w.set(x,h.tagData(s.value+D));return w},i=function(d){if(!(typeof offset_info_table>"u")){const w=new Set;for(const x of d.keys())w.add(h.tagData(s.value+x));return w}},o=n.persistentState?n.persistentState:{},a=new Me(n.functionsOffsetTable,n.staticsOffsetTable,e.value,s.value),l=r(n.sptOffsetEntries),c=i(n.offsetInfoTables),f=new kt(["Scheduler","GC"]),m=new Ne(t),p=new Rt,A=new Lt(p,a),B=Math.ceil((s.value+n.staticBytes)/O),y=new h(t),P=new Qt(p,a,y),T=new qt(y),_=new te,g=new ee(y,T,a),b=new re(y,_,l),v=new ie(y,a,_),yt=new oe,wt=new ne(y,n.targetSpecificModule),J2=new ge(y,T,_,g,v,c,a,f,n.yolo,n.gcThreshold),St=new we(y),Tt=new ye(y,m),It=new ke,E=new Le(y,f,a,v,_),xt=new pe(y,T,E,c,a);const j2=new Oe(n.progName);v.exports=E,t.memory=y,t.exports=E;function At(d){return`0x${d.toString(16).padStart(8,"0")}`}const G2={exposeMemory:(d,w,x=Uint8Array)=>y.expose(d,w,x),newJSVal:d=>_.newJSVal(d),getJSVal:d=>_.getJSVal(d),freeJSVal:d=>_.freeJSVal(d),fs:m,stdio:{stdout:()=>m.history(1),stderr:()=>m.history(2)},returnFFIPromise:d=>v.returnFFIPromise(d)},Et=Object.assign(n.jsffiFactory(G2),{wasi_snapshot_preview1:j2.wasiImport,env:{__memory_base:s,__table_base:e},rts:{printI64:d=>m.writeNonMemory(1,`${At(d)}
`),assertEqI64:function(d,w){if(d!=w)throw new WebAssembly.RuntimeError(`unequal I64: ${d}, ${w}`)},print:d=>m.writeNonMemory(1,`${d}
`)},fs:{read:(d,w,x)=>m.read(d,w,x),write:(d,w,x)=>m.write(d,w,x)},posix:S(new n.targetSpecificModule.posix(y,Yt)),time:S(wt),floatCBits:S(St),GC:S(J2),ExceptionHelper:S(xt),HeapAlloc:S(T),Integer:S(yt),Memory:S(y),MemoryTrap:S(P),Messages:S(Tt),StablePtr:S(_),StableName:S(g),StaticPtr:S(b),Unicode:S(It),Tracing:S(A),Exports:{newHaskellCallback:(d,w,x,D,n2)=>{let V=[],Bt=E.newHaskellCallback(d,w,x,D,n2?()=>E.freeHaskellCallback(V[0]):()=>{});return V[0]=_.newJSVal(Bt),V[0]},freeHaskellCallback:d=>E.freeHaskellCallback(d)},Scheduler:S(v)});return WebAssembly.instantiate(n.module,Et).then(d=>{n.pic&&d.exports.__wasm_apply_relocs(),j2.initialize(d),Object.assign(E,d.exports),y.init(d.exports.memory,B),T.init(),v.setGC(J2);for(const[w,x,D,n2,V]of n.exportsStaticOffsets)E[w]=E.newHaskellCallback(_.newStablePtr(h.tagData(s.value+x)),D,n2,V,()=>{});return E.hs_init(),Object.assign(G2,{exports:E,symbolTable:a,persistentState:o})})}const Pe=""+new URL("nazuki-77c9ddc6.wasm",import.meta.url).href;class Ue{constructor(t,e){this.memory=t,Object.seal(this)}getProgArgv(t,e){this.memory.i64Store(t,1)}get_errno(){throw WebAssembly.RuntimeError("Unsupported rts interface: get_errno")}set_errno(){throw WebAssembly.RuntimeError("Unsupported rts interface: set_errno")}open(){throw WebAssembly.RuntimeError("Unsupported rts interface: open")}close(){throw WebAssembly.RuntimeError("Unsupported rts interface: close")}ftruncate(){throw WebAssembly.RuntimeError("Unsupported rts interface: ftruncate")}stat(){throw WebAssembly.RuntimeError("Unsupported rts interface: stat")}fstat(){throw WebAssembly.RuntimeError("Unsupported rts interface: fstat")}opendir(){throw WebAssembly.RuntimeError("Unsupported rts interface: opendir")}readdir(){throw WebAssembly.RuntimeError("Unsupported rts interface: readdir")}closedir(){throw WebAssembly.RuntimeError("Unsupported rts interface: closedir")}getenv(){throw WebAssembly.RuntimeError("Unsupported rts interface: getenv")}access(){throw WebAssembly.RuntimeError("Unsupported rts interface: access")}getcwd(){throw WebAssembly.RuntimeError("Unsupported rts interface: getcwd")}}const Ce={Time:{getCPUTime:()=>{const n=performance.now(),t=Math.floor(n/1e3),e=Math.floor(n-t*1e3)*1e6;return[t,e]},getUnixEpochTime:()=>{const n=Date.now(),t=Math.floor(n/1e3),e=Math.floor(n-t*1e3)*1e6;return[t,e]},resolution:1e6},posix:Ue},H={progName:"Lib",jsffiFactory:n=>({jsffi:{__asterius_jsffi_asteriuszmpreludezuAsteriusziUTF8_a4ft:(t,e,s)=>(t=n.getJSVal(t),new TextEncoder().encodeInto(t,n.exposeMemory(e,s)).written),__asterius_jsffi_asteriuszmpreludezuAsteriusziUTF8_a4fz:t=>(t=n.getJSVal(t),n.newJSVal(t.result)),__asterius_jsffi_asteriuszmpreludezuAsteriusziUTF8_a4JY:(t,e,s)=>(t=n.getJSVal(t),t.result+=t.decode(n.exposeMemory(e,s),{stream:!0})),__asterius_jsffi_asteriuszmpreludezuAsteriusziUTF8_a4K8:()=>n.newJSVal((()=>{const t=new TextDecoder("utf-8",{fatal:!0});return t.result="",t})()),__asterius_jsffi_asteriuszmpreludezuAsteriusziUTF8_a4Ke:()=>n.newJSVal(""),__asterius_jsffi_basezuAsteriusziTypesziJSException_acaMS:t=>(t=n.getJSVal(t),n.newJSVal(t.stack?t.stack:`${t}`)),__asterius_jsffi_basezuAsteriusziTypesziJSString_ac7d4:t=>(t=n.getJSVal(t),n.newJSVal(t[0])),__asterius_jsffi_basezuAsteriusziTypesziJSString_ac7dj:(t,e)=>(t=n.getJSVal(t),t[0]+=String.fromCodePoint(e)),__asterius_jsffi_basezuAsteriusziTypesziJSString_ac7dp:()=>n.newJSVal([""]),__asterius_jsffi_basezuAsteriusziTypesziJSString_ac7dw:t=>(t=n.getJSVal(t),(()=>{const e=t.next();return e.done?0:1+e.value.codePointAt(0)})()),__asterius_jsffi_basezuAsteriusziTypesziJSString_ac7dH:t=>(t=n.getJSVal(t),n.newJSVal(t[Symbol.iterator]())),__asterius_jsffi_basezuAsteriusziTypesziJSString_ac7dY:t=>(t=n.getJSVal(t),t.length),__asterius_jsffi_basezuAsteriusziTypesziJSVal_ac4Z5:t=>n.freeJSVal(t)}}),exportsStaticOffsets:[["createBanner",529536,1,1,!1],["run",530872,33,1,!1],["assemble",530472,1,1,!1],["compile",530112,1,1,!1]],functionsOffsetTable:Object.freeze({barf:5696}),staticsOffsetTable:Object.freeze({MainCapability:0,ghczmprim_GHCziTypes_ZMZN_closure:1392,ghczmprim_GHCziTypes_Czh_con_info:3408,ghczmprim_GHCziTypes_ZC_con_info:3016,ghczmprim_GHCziTypes_False_closure:3544,ghczmprim_GHCziTypes_True_closure:3552,ghczmprim_GHCziTypes_Izh_con_info:1512,stg_ARR_WORDS_info:4424,base_AsteriusziTypesziJSException_mkJSException_closure:205520,base_GHCziPtr_Ptr_con_info:5e3,stg_WEAK_info:232880,stg_NO_FINALIZER_closure:232904,ghczmprim_GHCziTypes_Dzh_con_info:6232,ghczmprim_GHCziTypes_Wzh_con_info:7512,stg_IND_info:233064,stg_marked_upd_frame_info:234560,stg_WHITEHOLE_info:232168,stg_BLACKHOLE_info:233136,stg_raise_ret_info:234872,base_AsteriusziTopHandler_runIO_closure:183232,base_AsteriusziTopHandler_runNonIO_closure:183328,stg_DEAD_WEAK_info:232944,stg_STABLE_NAME_info:234424,stg_raise_info:234896}),sptOffsetEntries:new Map([]),tableSlots:14778,staticBytes:530896,yolo:!1,pic:!1,defaultTableBase:1024,defaultMemoryBase:1024,consoleHistory:!1,gcThreshold:64,targetSpecificModule:Ce};async function Fe(){const t=await(await fetch(Pe)).arrayBuffer(),e=await WebAssembly.compile(t);return Object.assign(H,{module:e}),{async compile(s){return(await Z(H)).exports.compile(s)},async assemble(s){return(await Z(H)).exports.assemble(s)},async run(s,r){return(await Z(H)).exports.run(s,r)},async createBanner(s){return(await Z(H)).exports.createBanner(s)}}}export{Fe as loadNazuki};
